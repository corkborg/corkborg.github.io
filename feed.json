{
    "version": "https://jsonfeed.org/version/1",
    "title": "塩の惑星",
    "description": "",
    "home_page_url": "https://corkborg.github.io",
    "feed_url": "https://corkborg.github.io/feed.json",
    "user_comment": "",
    "icon": "https://corkborg.github.io/media/website/logo2.png",
    "author": {
        "name": "ミズソバ"
    },
    "items": [
        {
            "id": "https://corkborg.github.io/google-seo-leak-2024/",
            "url": "https://corkborg.github.io/google-seo-leak-2024/",
            "title": "Google検索アルゴリズムの流出？と言われている物を実際に見てみた",
            "summary": "最近（2024年5月）、Googleから検索に関連する内部APIのソースコードや内部文章がリークされたと話題ですね。 Google検索の検索順位はサイト運営する人には重要で、SEOなど検索アルゴリズムを逆手に取って検索順位をあげようと試みたりする場合があります。 その為、注目が集まっているのだと思います。 今回の流出を調べてみてわかったことは、Google検索の内部の重要なソースコードを何者かがリークしたと言うよりは、社内で使われているAPIの定義を誤って外部に見えるようしてしまった感じのようです。 Google側の温度感はそこまで高く無いように見えていて、流出した情報は未だに正式な手段で入手できる状況です。&hellip;",
            "content_html": "<p>最近（2024年5月）、Googleから検索に関連する内部APIのソースコードや内部文章がリークされたと話題ですね。</p>\n<p>Google検索の検索順位はサイト運営する人には重要で、SEOなど検索アルゴリズムを逆手に取って検索順位をあげようと試みたりする場合があります。<br>その為、注目が集まっているのだと思います。</p>\n<p>今回の流出を調べてみてわかったことは、Google検索の内部の重要なソースコードを何者かがリークしたと言うよりは、社内で使われているAPIの定義を誤って外部に見えるようしてしまった感じのようです。<br>Google側の温度感はそこまで高く無いように見えていて、流出した情報は未だに正式な手段で入手できる状況です。</p>\n<p>そして、流出したものはあくまでも<strong>API</strong>についての文章であって、Google検索内部の仕組みについては依然不明なので、分かる事としてはGoogle内部のシステムの構造や、Googleの組織構造などくらいです。</p>\n<h2>Google APIとは</h2>\n<p>Googleでは顧客向けにAPIを公開していて、APIを使うことで顧客のシステムにGoogleの機能を利用する事ができるようになっています。</p>\n<p>Googleはこの考え方を社内向けにも応用していて、Google内部の人も社内の機能を使いたいと考えたら、Google内部の向けのAPIを使用してその機能を利用するような仕組みになっているようです（こういう形態はマイクロサービスと言う概念と関係があります）。</p>\n<p>つまり、Googleでは社外向けのAPIも社内向けのAPIも同一の仕組みで取り扱っていて、社外向けのAPIを抜粋して外部に公開する仕組みがあるようで、それらのフローで問題が起きたようです。</p>\n<p><a href=\"https://github.com/googleapis/elixir-google-api\">https://github.com/googleapis/elixir-google-api</a></p>\n<h2>Googleが誤って公開してしまったもの</h2>\n<p>今回誤って公開されてしまったものは、ContentWarehouseと呼ばれるものです。</p>\n<p>Warehouseは直訳すると倉庫ですが、IT業界では一般的に大規模なデータを処理することに特化したデータベースの事を指します。</p>\n<p>これらはコンテンツ情報（Webサイトなど）を処理する大規模なデータベースにアクセスするためのAPIのように見えます。</p>\n<p>ただし、今回公開されてしまったものはContentWarehouse API内部のソースコード…ではなく、APIで取り扱うことが可能な<strong>データの構造（モデル）</strong>の定義です。</p>\n<h2>実際のデータ</h2>\n<p>こちらが、Googleが誤って公開してしまったGitHubのPRです。<br><a href=\"https://github.com/googleapis/elixir-google-api/pull/11021\">https://github.com/googleapis/elixir-google-api/pull/11021</a></p>\n<p>こちらが、誤って公開した物を削除するPRです。<br><a href=\"https://github.com/googleapis/elixir-google-api/pull/11378\"></a><a href=\"https://github.com/googleapis/elixir-google-api/pull/11378\">https://github.com/googleapis/elixir-google-api/pull/11378</a></p>\n<p>GitHubでは一度誤って公開した情報を完全に消すにはファイルの削除だけでなく、Gitの履歴から削除するとともにリポジトリを作り直したりする必要があります。これらの対応をGoogleは行っていません。</p>\n<p>削除する直前のコミットidは <code>e6a95f9335bf2fcb3cef77d99eecf3e0ca8d65c7</code>です。<br>Gitに詳しい方であれば上記IDをチェックアウトしてもらえば該当の定義を見ることができると思います。</p>\n<h2>データ構造（モデル）の定義とは</h2>\n<p>モデルというものはAPI間や機能間でデータをやり取りするために、転送する予定のデータの内容を事前に取り決めをしておくためのものです。</p>\n<p>つまり、このAPIのモデルの定義を見るとGoogle検索がContentWarehouseにアクセスする際に送っている情報が推測できる可能性があります。</p>\n<p>ただ、このようなデータ構造の定義書というのはいくつかの点で注意する必要があります。例を挙げると</p>\n<ul>\n<li>過去に使われていたものが互換性の問題で残されている</li>\n<li>送っているけど内部では使われていない物</li>\n<li>システムでは使う予定はないが記録として併記されていると嬉しい物</li>\n<li>メソッド名やコメントが実態を表していない場合</li>\n<li>開発版の可能性</li>\n<li>データ構造が複数の機能に参照されていて片方には必要の無い情報（Google広告向けなど）</li>\n</ul>\n<p>これらは、どこの組織のシステムでも割とよくあることで特殊な事例ではありません。そのため、APIのドキュメントだけでは内部の動きを物語る確実な証拠にはならない感じです。</p>\n<p>今回のAPIドキュメントに書いてある内容をそのまま鵜呑みにするのは良くないと思います。</p>\n<h2>APIデータの見方</h2>\n<p>ソースコードを直接見てもよいのですが該当のドキュメントはElixirというプログラミング言語で書かれていてExDocという機能でHTMLを生成できます。</p>\n<p>Elixirをインストールした後に下記の様にコマンドを実行すると今回の件のHTMLドキュメントが生成されます。</p>\n<pre>cd clients/content_warehouse/<br>mix deps.get<br>mix docs</pre>\n<p>docsディレクトリにHTMLが生成されます。<br>index.htmlを開くとこんな感じです。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/42//sukurinsiyotuto-2024-06-02-14.03.53.png\" alt=\"\" width=\"1846\" height=\"670\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/42//responsive/sukurinsiyotuto-2024-06-02-14.03.53-xs.png 300w ,https://corkborg.github.io/media/posts/42//responsive/sukurinsiyotuto-2024-06-02-14.03.53-sm.png 480w ,https://corkborg.github.io/media/posts/42//responsive/sukurinsiyotuto-2024-06-02-14.03.53-md.png 749w ,https://corkborg.github.io/media/posts/42//responsive/sukurinsiyotuto-2024-06-02-14.03.53-xl.png 1200w\"></figure>\n<p>PerDocDataというデータ構造がGoogle検索のAPIリクエストを集約している物のように見えるのでそこから見ていくと面白いかもしれません。</p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/42/sukurinsiyotuto-2024-06-03-2.24.29.png",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
            ],
            "date_published": "2024-06-02T15:35:47+09:00",
            "date_modified": "2024-06-04T17:22:58+09:00"
        },
        {
            "id": "https://corkborg.github.io/em-5-mark-iiwoyu-nozhong-shi-tutahua/",
            "url": "https://corkborg.github.io/em-5-mark-iiwoyu-nozhong-shi-tutahua/",
            "title": "水深20mまでのRICOH WG-6を40m級のダイビングで使うとどうなるか？",
            "summary": "RICOH WG-6をスキューバダイビングで使っていました。 WG-6はアウトドア向けのコンパクトカメラで水深20mまでの防水性能があります。 WG-6 -&hellip;",
            "content_html": "<p>RICOH WG-6をスキューバダイビングで使っていました。</p>\n<p>WG-6はアウトドア向けのコンパクトカメラで水深20mまでの防水性能があります。<br><a href=\"https://www.ricoh-imaging.co.jp/japan/products/wg-6/spec/index.html\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">WG-6 - 製品仕様</a></p>\n<p>今回の記事は防水カメラを性能以上の深度で使うどどうなるか書きます。</p>\n<p>結論から言うと性能を超えた水深でもある程度までは割と使えました。</p>\n<h3>スキューバダイビングと深度</h3>\n<p>スキューバダイビングでは初心者向けのライセンスと、中級者向けのライセンスがあります。自分が取得したPADIで言うと下記のようになっています。</p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 57.7636%;\">ライセンスの状況</td>\n<td style=\"width: 42.379%;\">水深</td>\n</tr>\n<tr>\n<td style=\"width: 57.7636%;\">体験ダイビングなど（無免許）</td>\n<td style=\"width: 42.379%;\">水深12mまで</td>\n</tr>\n<tr>\n<td style=\"width: 57.7636%;\">PADI オープン･ウォーター</td>\n<td style=\"width: 42.379%;\">水深18mまで</td>\n</tr>\n<tr>\n<td style=\"width: 57.7636%;\">PADI アドヴァンスド・オープン・ウォーター</td>\n<td style=\"width: 42.379%;\">水深30m-40mまで</td>\n</tr>\n</tbody>\n</table>\n<p>オープン・ウォーターまではWG-6で余裕なのですが、アドバンスドの免許を取得してダイビングを行う場合WG-6が耐えられる水深を超えている感じになります。</p>\n<h3>余談: WG-6をダイビング向けに購入するのはおすすめしない</h3>\n<p>ちなみに、この記事はスキューバダイビングでWG-6をおすすめする記事ではありません。<br>もしもスキューバダイビングでこのようなカメラの購入を検討している場合はOM SYSYEMのTG-7などがおすすめです。</p>\n<p>TG-7本体は水深15mまでの防水性能ですが、ハウジング（防水ケース）を装着することで45mまで行けるようになります。</p>\n<p>対して、WG-6はハウジングが存在しないので20mが限界です。先々スキューバダイビングが面白くなりアドバンスドの免許を取る可能性がある場合、いずれWG-6は使わなくなってしまうでしょう。</p>\n<p>自分はダイビング以外の用途で以前からWG-6を持っていたのでスキューバダイビングに使用しました。水中での写真の写りは満足しているのでハウジングが存在しないことが惜しまれます…。</p>\n<h2>30m級のダイビングに持ち込んでわかったこと</h2>\n<p>30m級だと意外と動きます。</p>\n<p>ただ、不思議なことに気づきました。液晶のちょうど中央に小さな変な写っています。<br>雰囲気としては液晶の保護シートの中に空気が残ってしまった感じのようなものです。</p>\n<p>それでも写真が撮れるので使っていたのですが、だんだん気づきてきました。</p>\n<p>これは、液晶の保護パネルが水圧で押されて液晶パネルと接触してしまっているようでした。</p>\n<p>結構な歪みなので30m級のダイビングで使い続けていると液晶の保護パネルが割れてしまうかもしれないです。</p>\n<h2>40m級のダイビングに持ち込んでわかったこと</h2>\n<p>30mでやめておけばよいのに、40mで使ってみるとどうなるか興味が湧きました。</p>\n<p>いざ使ってみると、30m級で問題になっていた液晶の歪みが大きくなったのですが他の問題が発生しました。</p>\n<p>カメラが起動しない…。一瞬起動したり、水深が少し上がると使えるので壊れてはいなそうなので何が起きているのだろうと色々触っていると、電源ボタンを押した感触が薄いことに気づきました。</p>\n<p>どうやら、水圧でボタンが押し込まれてしまって起動できなくなってしまったようでした。</p>\n<p>WG-6を40mで使ったのはこの一回だけですが、その後も使えているので故障はしなかったようです。</p>\n<h2>余談：WG-6で撮れる写真について</h2>\n<p>WG-6を40mで使うのはあまり良くなさそうだったので、後日Canon S110とハウジングを中古で購入しました（セットで1万円程度で安かったので）。</p>\n<p>水中カメラ用ライトが無く光量が不足しているのもあるとは思いますが、取れた写真は微妙で、WG-6などダイビングに注力しているカメラとの実力差を思い知らされました。</p>\n<p>水深の問題を除くと、ライトが無くてもきれいな写真が撮れるWG-6は良いカメラだと思います。</p>\n<h2>まとめ</h2>\n<ul>\n<li>WG-6の仕様では耐えられる水深は20mまで</li>\n<li>30m級のダイビングだと普通に撮影はできるがいずれ壊れる可能性が心配される</li>\n<li>40m級のダイビングではWG-6は全然使えない</li>\n</ul>\n<p>という感じでした。</p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
            ],
            "date_published": "2024-06-01T14:27:00+09:00",
            "date_modified": "2024-06-03T03:05:01+09:00"
        },
        {
            "id": "https://corkborg.github.io/nikon-z6-24-70mm-f4-in-rain/",
            "url": "https://corkborg.github.io/nikon-z6-24-70mm-f4-in-rain/",
            "title": "防滴性能が曖昧な24-70mm f/4 SをNikon Z6で雨の中使った話",
            "summary": "多くの場合、防滴性能があるカメラは防滴性能のあるレンズと組み合わせて使用する必要があります。 私は、Nikon Z6と標準ズームレンズの24-70mm f/4 Sを使用しています。&hellip;",
            "content_html": "<p>多くの場合、防滴性能があるカメラは防滴性能のあるレンズと組み合わせて使用する必要があります。</p>\n<p>私は、Nikon Z6と標準ズームレンズの24-70mm f/4 Sを使用しています。</p>\n<p>Z6は防滴性能を謳っていますが、24-70mm f/4というレンズは防滴レンズではありません。<br>一応、メーカーサイトを見る感じ全く雨がだめなわけではなく、防滴に配慮されたレンズではあるらしいです。（配慮された？🤔）</p>\n<p>この防滴性能が曖昧なレンズを雨の中で使ったらどうなるのか。<br>ここ半年で４回程度、<strong>雨が降っている中使ってしまった</strong>ので紹介したいと思います。</p>\n<h2>防滴に配慮した設計とは</h2>\n<p>まずは、防滴に配慮した設計がどのようなものなのかNikonのホームページを見てみましょう</p>\n<p><a href=\"https://www.nikon-image.com/products/nikkor/zmount/nikkor_z_24-70mm_f4_s/features01.html\" target=\"_blank\" rel=\"noopener noreferrer\">製品特徴 - NIKKOR Z 24-70mm f/4 S</a></p>\n<blockquote>\n<div id=\"link_a5_a3\" class=\"mod-headingV3\">\n<h4 class=\"mod-headingV3-title\">防塵・防滴に配慮した設計</h4>\n</div>\n<div class=\"mod-layout\">\n<div class=\"mod-layout-row\">\n<div class=\"mod-layout-item\">\n<div class=\"mod-specialtyText\">\n<p>埃や水滴の侵入を防ぐシーリングをレンズ鏡筒の可動部分をはじめとする随所に施した防塵・防滴※に配慮した設計です。<br><br>※防塵・防滴に配慮した設計となっておりますが、すべての条件で完全な防塵・防滴を保証するものではありません。</p>\n</div>\n</div>\n</div>\n</div>\n</blockquote>\n<p>この記述から、小雨で、風が強くない日なら行けるんじゃないかと私は考えました（個人の感想です）。</p>\n<h3>※防滴レンズに雨よけなどを被せる事に注意</h3>\n<p>持論ではありますが、雨を恐れて安易にレンズ周りにビニール袋やタオルなどをかけたりする事などはやめたほうが良いと思います。<br>防滴を謳っているレンズはパッキン周辺に入った<strong>水が適切に排出される事</strong>を想定していることが多いようです。<br>そのため、良かれと思って付けた雨よけが排出を阻害して不意に浸水してしまう事例が多いようです。</p>\n<h2>使ってみた例（４回分）</h2>\n<p>雨の中で使ってみた例を紹介します。</p>\n<h3>一回目</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/40//DSC_1098.JPG\" alt=\"24-70mm f/4 Sを雨の中で使った作例\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/40//responsive/DSC_1098-xs.JPG 300w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1098-sm.JPG 480w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1098-md.JPG 749w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1098-xl.JPG 1200w\"></figure>\n<p>個人的にはあまり降ってなかった印象なのですが、動画を見る感じそれなりに降っていて横からの風もそれなりにあったようです。１時間弱撮影していました。</p>\n<h3>二回目</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/40//DSC_1336.JPG\" alt=\"24-70mm f/4 Sを雨の中で使った作例\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/40//responsive/DSC_1336-xs.JPG 300w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1336-sm.JPG 480w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1336-md.JPG 749w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1336-xl.JPG 1200w\"></figure>\n<p>この日は植物園メインだったので、雨の中では１０分程度しか使用しませんでした。</p>\n<h3>三回目</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/40//DSC_1211.JPG\" alt=\"24-70mm f/4 Sを雨の中で使った作例\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/40//responsive/DSC_1211-xs.JPG 300w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1211-sm.JPG 480w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1211-md.JPG 749w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1211-xl.JPG 1200w\"></figure>\n<p>この日は小雨でした。30分程度撮影しました。</p>\n<h3>四回目</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/40//DSC_1586.JPG\" alt=\"24-70mm f/4 Sを雨の中で使った作例\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/40//responsive/DSC_1586-xs.JPG 300w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1586-sm.JPG 480w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1586-md.JPG 749w ,https://corkborg.github.io/media/posts/40//responsive/DSC_1586-xl.JPG 1200w\"></figure>\n<p>この日はだいぶ降っていてかなりカメラがびしょびしょになりました。３０分程度使用しました。</p>\n<h2>使い終わった後</h2>\n<p>雨の中で使用した後は雨を拭いて、風通しの良いところに置いて乾かしています。<br>半年程度経っていますが、今のところレンズの中にカビ、クモリのような物は発生していないです。</p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/40/P5300106.2.JPG",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "カメラ"
            ],
            "date_published": "2024-05-30T14:26:00+09:00",
            "date_modified": "2024-06-03T03:08:45+09:00"
        },
        {
            "id": "https://corkborg.github.io/raising-ants-less-interesting/",
            "url": "https://corkborg.github.io/raising-ants-less-interesting/",
            "title": "アリの飼育は思ったよりも面白くなかった",
            "summary": "私はアリを３年飼育しています。 飼育する前はアリのコロニーを飼育することは熱帯魚並に面白くて見てて飽きないんじゃないかと思っていました。 実際に飼育してみるとアリはペットとしての面白みが少ない生き物だなと感じます。 例えば、強いこだわりもなく熱帯魚とアリを飼育するのを迷っている人がいるとしたら、基本的に熱帯魚のほうを私はおすすめします。 今回は、アリの飼育が何故そこまで面白くないのか解説します。&hellip;",
            "content_html": "<p>私はアリを３年飼育しています。</p>\n<p>飼育する前はアリのコロニーを飼育することは熱帯魚並に面白くて見てて飽きないんじゃないかと思っていました。<br>実際に飼育してみるとアリはペットとしての面白みが少ない生き物だなと感じます。</p>\n<p>例えば、強いこだわりもなく熱帯魚とアリを飼育するのを迷っている人がいるとしたら、基本的に熱帯魚のほうを私はおすすめします。</p>\n<p>今回は、アリの飼育が何故そこまで面白くないのか解説します。<br>この記事を読んだうえでも、アリ飼育への興味を失わない人はアリを飼うべきでしょう。</p>\n<p>ちなみにアリを手放したりする予定は無いです。ペットとして面白くないだけで苦労して育てた愛着と責任感があります。</p>\n<h2 class=\"p3\">飼っているアリ</h2>\n<figure class=\"post__image\" ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/38/DSC_1842.JPG\" alt=\"アリの飼育セット\" width=\"1000\" height=\"734\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/38/responsive/DSC_1842-xs.JPG 300w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1842-sm.JPG 480w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1842-md.JPG 749w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1842-xl.JPG 1200w\"></figure>\n<figcaption >アリを飼っている風景</figcaption>\n</figure>\n<p>アリは種類によって生態が異なり面白さも変わります。<br>そのため参考までに私が飼っているアリを紹介します。</p>\n<table style=\"border-collapse: collapse; width: 100%; height: 518.203px;\" border=\"1\">\n<tbody>\n<tr style=\"height: 136.75px;\">\n<td style=\"width: 28.5614%; height: 136.75px;\">イトウオオアリ</td>\n<td style=\"width: 71.5813%; height: 136.75px;\">\n<p>枯れ枝の中などに住むアリ。<br>３匹の女王アリで一緒に暮らしている。<br>働きアリのサイズが様々で面白いが、基本小さくて観察し辛い（4mm位）。</p>\n</td>\n</tr>\n<tr style=\"height: 136.75px;\">\n<td style=\"width: 28.5614%; height: 136.75px;\">ミカドオオアリ</td>\n<td style=\"width: 71.5813%; height: 136.75px;\">\n<p>枯れ枝の中などに住むアリ。<br>サイズが大きいアリ。<br>大きいので観察し易いが、夜行性なのであまり動いている姿を見ない。</p>\n</td>\n</tr>\n<tr style=\"height: 107.953px;\">\n<td style=\"width: 28.5614%; height: 107.953px;\">アシナガアリ</td>\n<td style=\"width: 71.5813%; height: 107.953px;\">\n<p>土の中などに住むアリ。<br>足が長くて歩く姿が面白い。<br>少し肉食性が強い。冬の寒さにやたらと強い。<br>餌がない場合は巣からあまり出てこない。</p>\n</td>\n</tr>\n<tr style=\"height: 136.75px;\">\n<td style=\"width: 28.5614%; height: 136.75px;\">クロヤマアリ</td>\n<td style=\"width: 71.5813%; height: 136.75px;\">\n<p>公園の土などに住むアリ。<br>振動に敏感ですぐパニックになるのでめんどくさい。<br>オーソドックス過ぎて面白い特徴が少ない。</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>私はこれらの新女王アリが街灯に集まっているところを捕まえて飼育を開始しました。</p>\n<h2>新女王がコロニーをある程度成長させるまでは楽しい</h2>\n<p>捕獲した新女王アリが働きアリを徐々に生んでいって、コロニーが形成される姿を見るのは楽しいです。<br>この頃は、一歩間違えると女王アリも死んでしまったりするので飼育者も必死です。</p>\n<p>それ以降は、しっかり飼育していればただ安定して増えていくだけなのでマンネリ化します。</p>\n<h2 class=\"p3\">飼育しているアリはあんまり動かない</h2>\n<figure class=\"post__image\" ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/38/DSC_1845_02.JPG\" alt=\"ライトを当てられて餌場でウロウロし始めたイトウオオアリ達\" width=\"1000\" height=\"665\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/38/responsive/DSC_1845_02-xs.JPG 300w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1845_02-sm.JPG 480w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1845_02-md.JPG 749w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1845_02-xl.JPG 1200w\"></figure>\n<figcaption >ライトを当てられて餌場でウロウロし始めたイトウオオアリ達</figcaption>\n</figure>\n<p>働きアリの法則と言ったりしますが、アリの9割位は巣の中でじっとしています。<br>残りの働き者アリはどうかと言うと、餌場のあたりでじっとしています。</p>\n<p>多分アリの屋外での行動範囲に比べると飼育キット全体が小さすぎるんでしょうね。<br>アリは飼育キットの中ではあんまり動きません。面白くないです。</p>\n<p>巣を小突いたり、ライト当てたりちょっかいを出すと驚いてアリも騒ぎ始めますが、本来観察したかったことはそういうことなのでしょうか。</p>\n<h2>飼育用アリの巣は地味</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/38/DSC_1844.JPG\" alt=\"イトウオオアリの飼育セット\" width=\"1000\" height=\"665\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/38/responsive/DSC_1844-xs.JPG 300w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1844-sm.JPG 480w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1844-md.JPG 749w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1844-xl.JPG 1200w\"></figure>\n<p>アリといえば土の中に巣を作るイメージがありますが、アリ飼育では通常土で飼ったりはしません。</p>\n<p>なぜなら、アリの巣は汚れがたまるものでそのままにしておくと見た目が汚くなったり、病気になったりします。そのため、たまに巣を新しくしてやる必要がありますが、土を巣をひっくり返してアリを新しい巣に入れ替えしてあげるのはだいぶ骨が折れると思います。</p>\n<p>そのため、石膏巣やプラスチック巣など決まった形の巣で育てることが多いです。そうなると、アリが巣を掘ったりすがたを見れないのであまり面白くないです。</p>\n<p>ただ、土でアリを育てたとしても半月位ガンガン掘ったら後は変化が少ないはずなのでそんなに面白くないと思います。</p>\n<h2><span style=\"color: #000000;\">餌やりが地味</span></h2>\n<figure class=\"post__image\" ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/38/DSC_1846.JPG\" alt=\"アリの餌入れ\" width=\"1000\" height=\"789\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/38/responsive/DSC_1846-xs.JPG 300w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1846-sm.JPG 480w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1846-md.JPG 749w ,https://corkborg.github.io/media/posts/38/responsive/DSC_1846-xl.JPG 1200w\"></figure>\n<figcaption >アリの餌入れに餌を入れてピンセットで餌場に置きます</figcaption>\n</figure>\n<p>アリを飼う上で一番楽しいのは餌やりです。</p>\n<p>匂いなのか振動なのか餌を置くとアリが出てきたりします。出てこないこともあります。</p>\n<p>ただ、そんなに積極的に餌を食べたりしません。少し蜜を吸ったりして巣に帰ったり帰らなかったりします。たまに仲間がワラワラでてくることもありますが、出てこないことも多いです。</p>\n<p>次の日になると餌が減っていたり、減ってなかったりします。</p>\n<h2>活餌は楽しいが</h2>\n<p>活餌というのは生きている餌です。イモムシなどをアリの餌場にいれるとアリが攻撃して餌として持ち帰ってくれます。</p>\n<p>アリが攻撃してる姿を見るのは面白いです。普通の餌よりも美味しいのかワラワラ出てきます。</p>\n<p>ただ、相手の強さによってはアリが数匹死ぬことがあります。そして、活餌は寄生虫や感染症のリスクがあるためアリの健康を損なう場合があります。そして、巣が汚れます。</p>\n<p>活餌はたまにしかあげません。</p>\n<h2 class=\"p3\">行動を目撃するには長い時間が必要</h2>\n<p>私にはあまり動いているように見えないですが、毎日観察して巣の状況を見ているとアリは結構色々なことをしているようです。</p>\n<p>卵を移動させたり、幼虫を餌場に連れて行ったり、繭を巻いたり、餌を持ち帰ったり。<br>ただ、それを目撃するには長い時間アリを観察する必要があります。</p>\n<p>アリの種類によっては夜行性の場合もあり、昼はほとんど活動しないものもいます。そうなると人によっては時間が合わない場合もあるでしょう。</p>\n<h2 class=\"p3\">巣が薄暗い</h2>\n<p>アリは明るいところでも育てられるのですが、あまり明るいとホースの中で暮らし始めたり奇怪なことをし始めます。</p>\n<p>暮らせるには暮らせるけど明るいところは嫌いなんだと思います。そのため、多少暗いところで飼育してやろうという気になってきます。</p>\n<p>薄暗いと巣の中が見づらくなり観察する気が減ります。<br>ちなみに、ライトを当てるとどのアリも基本嫌がります。イトウオオアリはお腹を壁に合ってて音を立てながら警戒してきます。</p>\n<p>小さいアリほど薄暗いと観察し辛いので大きいアリが良いです。</p>\n<h2 class=\"p4\">夏に弱い</h2>\n<p>これは面白くないポイントではないのですが、アリ飼育のうえで見落としがちな注意ポイントです。</p>\n<p>アリは30度を超えるような環境では死んでしまったり、体調不良になってしまうことがあります。そのため、夏場は４６時中エアコンがあたっているような環境が必要になります。</p>\n<h2>アリ飼育をまとめると</h2>\n<p>アリ飼育の地味さが伝わったでしょうか。</p>\n<p>アリの飼育は観葉植物に似ているような気がします。変化を直接観測することは難しいものの、毎日少し観察していると着実になにか変化していっている感じの生き物だと思います。</p>\n<h3>アリ飼育キット</h3>\n<p>ちなみに飼育キットは基本ここで買っています。<br><a href=\"https://aliceinunder.theshop.jp/\" target=\"_blank\" rel=\"noopener noreferrer\">あり巣 in Underground - https://aliceinunder.theshop.jp/</a><a href=\"https://aliceinunder.theshop.jp/\" target=\"_blank\" rel=\"noopener noreferrer\"></a></p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/38/ants_line_01.png",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "アリ"
            ],
            "date_published": "2024-05-20T11:56:58+09:00",
            "date_modified": "2024-05-31T14:55:35+09:00"
        },
        {
            "id": "https://corkborg.github.io/planted-plants-in-ada-cell/",
            "url": "https://corkborg.github.io/planted-plants-in-ada-cell/",
            "title": "湿度の好む植物向けの鉢. ADAのCELLに植物を植えてみた",
            "summary": "この世には多数の植物がいて様々な環境に適応しています。そんな中でも、湿度の高い環境で暮らす植物の栽培は面倒くさいです。 このような植物は、通常の部屋の湿度だと葉がしおれてしまいます。それでも茎は元気だったりするのですが、そのまま放置していると枯れてしまいます。 霧吹きでどうにかすることもできますが一日に何回も霧吹いてやらなければならないです（あんまりやりすぎと部屋にカビが生えるかも…）。 そのため、そのような植物はガラス容器、ビニール袋、ミニ温室などで育てます。 この中でもガラス容器は鑑賞用途に優れています。ただ、それなりに大きいサイズの植物に対応する、ちょうど良いガラス容器はなかなか売っていません。&hellip;",
            "content_html": "<p>この世には多数の植物がいて様々な環境に適応しています。そんな中でも、湿度の高い環境で暮らす植物の栽培は面倒くさいです。</p>\n<p>このような植物は、通常の部屋の湿度だと葉がしおれてしまいます。それでも茎は元気だったりするのですが、そのまま放置していると枯れてしまいます。</p>\n<p>霧吹きでどうにかすることもできますが一日に何回も霧吹いてやらなければならないです（あんまりやりすぎと部屋にカビが生えるかも…）。</p>\n<p>そのため、そのような植物はガラス容器、ビニール袋、ミニ温室などで育てます。<br>この中でもガラス容器は鑑賞用途に優れています。ただ、それなりに大きいサイズの植物に対応する、ちょうど良いガラス容器はなかなか売っていません。</p>\n<p>最近、アクアリウム製品メーカーのADAという会社が湿度の高い植物の園芸（パルダリウム）に力を入れています。その商品として、大きめでちょうど良いガラス容器を多数開発しています。</p>\n<p>今回紹介するCELLという製品は2024年3月に発売したADAの新商品です。</p>\n<h2>CELLの紹介</h2>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://corkborg.github.io/media/posts/36/DSC_1535.JPG\" alt=\"ADA CELL\" width=\"387\" height=\"582\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/36/responsive/DSC_1535-xs.JPG 300w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1535-sm.JPG 480w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1535-md.JPG 749w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1535-xl.JPG 1200w\">\n<figcaption >高さは30.5cmです</figcaption>\n</figure>\n<p>前情報も無くなんとなくお店に行ったらのCELLが展示されていました。迷ったのですが、ちょうど園芸用に縦長の水槽を買い足したいと思っていたタイミングだったので試しに使ってみようと思い買ってみました。</p>\n<p>CELLは今のところアンバー（茶色）、エメラルド（水色）、クリア（透明）の三色がラインナップされているようです。</p>\n<p><a href=\"https://www.adana.co.jp/jp/release/detail?id=1244\" target=\"_blank\" rel=\"noopener noreferrer\">ガラスポット「CELL」 発売のお知らせ | ADA</a></p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/36/DSC_1536.JPG\" alt=\"ADA CELL基部\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/36/responsive/DSC_1536-xs.JPG 300w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1536-sm.JPG 480w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1536-md.JPG 749w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1536-xl.JPG 1200w\"></figure>\n<p>CELLはカバー、基部、ガラス鉢の3つのパーツで構成されています。すべてガラス製でです。</p>\n<p>ガラス鉢から出た水は基部に溜まります。基部は園芸でいう受け皿として使用されます。そのため、洗う作業を少しの期間サボると基部は汚れると思います。</p>\n<p>あまり頻度高く洗えない場合はアンバーやエメラルドなど色付きの物を選んだほうが汚れが目立たなくて良いかもしれないです。</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/36/DSC_1537.JPG\" alt=\"ADA CELL各種パーツ\" width=\"4528\" height=\"3016\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/36/responsive/DSC_1537-xs.JPG 300w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1537-sm.JPG 480w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1537-md.JPG 749w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1537-xl.JPG 1200w\"></figure>\n<p>ガラス鉢の底は基部の底から2cm位浮いています。そのため、土から水を抜くことができます。根腐れし易い植物にも使えると思います。</p>\n<p>私は越水をしたかったので基部に水を並々注いで使っています。</p>\n<h2>植物を植えてみた</h2>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/36/DSC_1541-2.JPG\" alt=\"\" width=\"1000\" height=\"665\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/36/responsive/DSC_1541-2-xs.JPG 300w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1541-2-sm.JPG 480w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1541-2-md.JPG 749w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1541-2-xl.JPG 1200w\"></figure>\n<p>これが植える予定の植物です。カラジウムの遠い親戚です。</p>\n<p>この植物は通常の湿度でもギリギリ大きく育つものの、そのような環境だと年中葉の調子が悪くなります。そして、湿度が高いと新しい根が葉柄を突き抜け空気中に出てきて面白いので湿度が高い環境を探していました。</p>\n<p>育てやすさとは裏腹に植え替え時に軟腐病にとてもかかりやすいので、苗の土はそのままに殺菌剤を染み込ませた後にCELLに植え込みました。</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/36/DSC_1544.JPG\" alt=\"植物を植えたADA CELL\" width=\"437\" height=\"657\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/36/responsive/DSC_1544-xs.JPG 300w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1544-sm.JPG 480w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1544-md.JPG 749w ,https://corkborg.github.io/media/posts/36/responsive/DSC_1544-xl.JPG 1200w\"></figure>\n<p>そういえば、CELLには鉢底石とトロピカルリバーソイルという土が付いてきます。</p>\n<p>トロピカルリバーソイルですが、酸性土壌のようで見た目と硬さから考えるに硬質赤玉土（焼いた赤玉土）の仲間ではないかと思います。粒はミニ盆栽などで使われる極小粒サイズです。</p>\n<p>今回植える植物はアルカリ性が向いているので内側は独自の用土を使いました。土表面には付属の土を使いました。</p>\n<h2>まとめ</h2>\n<ul>\n<li>CELLは30.5cm程度の高さがある</li>\n<li>鉢、カバー、基部の３つのパーツで構成されている</li>\n<li>基部に水を貯められる</li>\n<li>最低限の土が付いてくる（酸性土壌）</li>\n</ul>\n<p>なかなかかっこいいです。中の植物が大きくなるのが楽しみです。</p>",
            "image": "https://corkborg.github.io/media/posts/36/DSC_1545_02.JPG",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "植物"
            ],
            "date_published": "2024-04-02T00:19:27+09:00",
            "date_modified": "2024-04-02T15:25:45+09:00"
        },
        {
            "id": "https://corkborg.github.io/created-kanji-to-time/",
            "url": "https://corkborg.github.io/created-kanji-to-time/",
            "title": "日本語や漢字の日付をPythonのdatetimeに変換するライブラリを作った",
            "summary": "日本語文章を解析しているときに地味に困る物の一つに漢字等の日本語で書かれた年月日があります。 今回は、日本語で書かれた日付のデータをPythonのdatetime、timedeltaに変換するライブラリを作成したので紹介します。 ※ datetimeは日時、timedeltaは時間（時間差）を取り扱うPython標準オブジェクトです kanji_to_timeという名前のライブラリです。&hellip;",
            "content_html": "<p>日本語文章を解析しているときに地味に困る物の一つに漢字等の日本語で書かれた年月日があります。</p>\n<p>今回は、日本語で書かれた日付のデータをPythonのdatetime、timedeltaに変換するライブラリを作成したので紹介します。</p>\n<p>※ datetimeは日時、timedeltaは時間（時間差）を取り扱うPython標準オブジェクトです</p>\n<hr>\n<p><strong>kanji_to_time</strong>という名前のライブラリです。</p>\n<p><a href=\"https://github.com/corkborg/kanji_to_time\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/corkborg/kanji_to_time</a><br><a href=\"https://pypi.org/project/kanji-to-time/\" target=\"_blank\" rel=\"noopener noreferrer\">https://pypi.org/project/kanji-to-time/</a></p>\n<p>こんな感じでインストールできます。</p>\n<pre class=\"language-bash\"><code>pip install kanji_to_time</code></pre>\n<h2>こんな変換ができます</h2>\n<p>半角、漢字混じり、漢数字、全角数字などを変換できます。</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; import kanji_to_time as ktt\n&gt;&gt;&gt; text = \"2024年4月5日22時30分4秒\"\n&gt;&gt;&gt; ktt.to_datetime(text)\ndatetime.datetime(2024, 4, 5, 22, 30, 4)</code></pre>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; ktt.to_timedelta(\"マイナス七〇億分\")\ndatetime.timedelta(days=-4861112, seconds=76800)</code></pre>\n<p>旧字の漢数字などにも対応しています。</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; ktt.to_datetime(\"弐零弐参年伍月肆日\")\ndatetime.datetime(2023, 5, 4, 0, 0)</code></pre>\n<p>今のところ億の位まで対応しています。</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; ktt.to_timedelta(\"3億二三万千７十１秒間\")\ndatetime.timedelta(days=3474, seconds=77471)</code></pre>\n<h2>機能ポイント</h2>\n<ul>\n<li>数値部分の文字数が可変でも変換可能です（ゼロ埋めの必要が無い）</li>\n<li>半角全角漢数字が混じっていても変換することができます。</li>\n<li>20秒、20秒間のように位の後ろに間が付いていても同様に変換することができます（timdelta変換のみ）。</li>\n</ul>\n<h2>どうやって作ったか？</h2>\n<p>当初、そんなに難しいコードを書かなくても解決できるだろうと考えていました。</p>\n<p>しかし、単純そうに見えて時間の変換はルールが多くてシンプルなコードでは実現できないことがわかりました。</p>\n<p>このようなルールがある文章を処理する場合、一番手軽なのは正規表現です。私も当初はreを使って解決しようと思ったのですが、実装している途中で正規表現で実現すると大変複雑で自分ですら理解できないようなコードになってしまうことに気づきました。</p>\n<p>手間を惜しまなければ、ルールが複雑な文章（文法）を相手にする際にはパーサージェネレータを使ったほうが良いです。Pythonでおすすめのパーサージェネレータを調べた所Larkというものがヒットしたのでこれを使用して作成しました。</p>\n<p><a href=\"https://lark-parser.readthedocs.io/en/stable/\">Larkの公式ドキュメント</a></p>\n<p>今回は、kanji_to_timeのパーサの中でも数字の周りの文法ルールだけを抜き出して紹介します。</p>\n<pre class=\"language-javascript\"><code>number: (MINUS | PLUS)? mixed_number_with_unit\nmixed_number_with_unit: unit_oku? unit_man? unit_sen? unit_juu? mixed_number?\n\nMINUS: \"-\" | \"ー\" | \"マイナス\" | \"ひく\" | \"引く\"\nPLUS: \"+\" | \"＋\" | \"プラス\" | \"たす\" | \"足す\"\n\nunit_oku: mixed_number \"億\" // 億は数値が必須\nunit_man: mixed_number \"万\" // 万は数値が必須\nunit_sen: mixed_number? \"千\"\nunit_juu: mixed_number? \"十\"\n\nmixed_number: (ZENKAKU_DIGIT | KANJI_DIGIT | DIGIT)+\nKANJI_DIGIT: \"一\" | \"壱\"\n           | \"二\" | \"弐\"\n           | \"三\" | \"参\"\n           | \"四\" | \"肆\"\n           | \"五\" | \"伍\"\n           | \"六\" | \"陸\"\n           | \"七\" | \"漆\"\n           | \"八\" | \"捌\"\n           | \"九\" | \"玖\"\n           | \"〇\" | \"ゼロ\" | \"零\"\n           | \"○\" | \"◯\" // 一応丸もサポートしておく\nZENKAKU_DIGIT: \"０\" | \"１\" | \"２\" | \"３\" | \"４\" | \"５\" | \"６\" | \"７\" | \"８\" | \"９\"</code></pre>\n<p>KANJI_DIGITという漢数字を読むだけの文法のルールをがありますが、このルールはmixed_numberというルールに参照されています。そして、mixed_numberはkanji_digitの他に全角、半角数値も参照していてそれらを統合しています。</p>\n<p>このように局所的な文法ルールが大域的な文法ルールで参照されることで、文法を木構造で表現することができます。</p>\n<p>上記のルールでは最終的にnumberという一番大域的なルールにそれぞれのルールが参照されている形になっています。</p>\n<p>Larkの文法ルールを用意したら、Python側でルールを実際に変換するコードを書いてやれば複雑なルールの文章を構造的にプログラミング言語の型に変換することができます。大変便利ですね。</p>\n<p>全体のkanji_to_timeの文法ルール全体はここから見れます。<br><a href=\"https://github.com/corkborg/kanji_to_time/blob/main/kanji_to_time/grammer/kanji_to_time.lark\">https://github.com/corkborg/kanji_to_time/blob/main/kanji_to_time/grammer/kanji_to_time.lark</a></p>\n<h2>一応漢数字の変換もできる</h2>\n<p>Larkの文法定義を見てもらうとわかるのですが、数値変換だけの文法ルールが存在するので数値変換だけを行うこともできます。</p>\n<p>一応調査用に漢数字から数値に変換する機能もあります。</p>\n<pre class=\"language-python\"><code>&gt;&gt;&gt; ktt.to_number(\"八千七十二\")\n8072</code></pre>\n<p>ただ、漢数字の数値変換についてはKanjizeという優れた先行ライブラリが存在するのでこの用途だけであればこちらを使ったほうが良いと思います。<br><a href=\"https://github.com/nagataaaas/Kanjize\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/nagataaaas/Kanjize</a></p>\n<h2>サポート</h2>\n<p>このような日付文字列を変換する際にはぜひ使ってみてください。</p>\n<p>不具合などに気づいたらissuesに投稿してもらえると嬉しいです。<br><a href=\"https://github.com/corkborg/kanji_to_time/issues\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/corkborg/kanji_to_time/issues</a></p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/35/Ming-Cheng-Wei-She-Ding-huairu-1711796415700.drawio-1.png",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "日本語周り",
                   "プログラミング"
            ],
            "date_published": "2024-03-30T19:21:34+09:00",
            "date_modified": "2024-04-08T13:33:54+09:00"
        },
        {
            "id": "https://corkborg.github.io/raspberrypi-5-vs-intel-core-i5-2500/",
            "url": "https://corkborg.github.io/raspberrypi-5-vs-intel-core-i5-2500/",
            "title": "RaspberryPi 5の性能はSandyBridge i5-2500に近いことに気づいた",
            "summary": "最近、RaspberryPi5が日本で発売されましたね。 当時は早いと言われていたRaspberryPi4よりも二倍以上も性能が高いようです。 公式によるRaspberryPi5のベンチマーク ただ、RaspberryPi同士の比較ではどれくらい実用的な性能を持っているのかわかりません。 そこでSandyBridgeに目をつけました。&hellip;",
            "content_html": "<p>最近、RaspberryPi5が日本で発売されましたね。</p>\n<p>当時は早いと言われていたRaspberryPi4よりも二倍以上も性能が高いようです。</p>\n<p><a href=\"https://www.raspberrypi.com/news/benchmarking-raspberry-pi-5/\">公式によるRaspberryPi5のベンチマーク</a></p>\n<p>ただ、RaspberryPi同士の比較ではどれくらい実用的な性能を持っているのかわかりません。<br>そこでSandyBridgeに目をつけました。</p>\n<h2>SandyBridge</h2>\n<p>SandyBridgeは2011年頃のCPUで、通常はあまり性能向上に寄与しない省電力周りの設計改善を極めたら非常に性能が向上したことで話題になったIntelのCPUシリーズです。</p>\n<p>今となっては１０年以上も昔のCPUですが、根強いファンが多く未だに使っている人がそれなりにいるようです。私も数年前までファイルサーバとしてSandyBridge i5-2500を使っていました。</p>\n<p><a href=\"https://dic.nicovideo.jp/a/sandy%E3%81%A7%E5%8D%81%E5%88%86%E3%81%8A%E3%81%98%E3%81%95%E3%82%93\">Sandyで十分おじさん</a></p>\n<p>流石に今は使ってないですが…。</p>\n<h2>Geekbench6での比較</h2>\n<p>RaspberryPi5で検索して一番にヒットするものは、Geekbench5なのでGeekbench6の結果を探しました。オーバクロックしていない2.4GHzで動作させているRasberryPi5の結果を選びました。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/33/sukurinsiyotuto-2024-03-30-0.41.49.png\" alt=\"\" width=\"1716\" height=\"594\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-xs.png 300w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-sm.png 480w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-md.png 749w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-xl.png 1200w\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/33/sukurinsiyotuto-2024-03-30-0.42.22.png\" alt=\"\" width=\"1736\" height=\"584\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-xs.png 300w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-sm.png 480w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-md.png 749w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-xl.png 1200w\"></figure>\n<p><a href=\"https://browser.geekbench.com/v5/cpu/21773016\"></a><a href=\"https://browser.geekbench.com/v5/cpu/21773016\">Geekbench6 Raspberry Pi 5 Model B Rev 1.0</a><br><a href=\"https://browser.geekbench.com/v5/cpu/21773016\"></a><a href=\"https://browser.geekbench.com/processors/intel-core-i5-2500\">Geekbench6 i5-2500</a></p>\n<p>シングルコア性能だとRaspberryPi 5のほうが何割か早いです。<br>マルチコア性能だとi5-2500のほうが少し早いようです。</p>\n<p>RaspberryPi5とi5-2500の性能は拮抗していそうです。</p>\n<h2>i5-2500から考えるRaspberryPi5の性能</h2>\n<p>RaspberryPi5とても早いですね。</p>\n<p>PCとしてもサーバとしても実用に近いスペックなのではないかと思います。私はi5-2500で5人位が使用するMinecraftサーバーなどを運用したことがあるのでそのようなタスクはこなせそうな気がします。</p>\n<p>昔、RaspberryPi400というPCを買ったのですが性能がイマイチだったので、5ベースのRaspberryPi500とか発売して欲しいですね。</p>\n<h3>SandyBridgeの性能は発売当初より落ちている？</h3>\n<p>SandyBridgeとほかのCPUの比較する際に一つ注意するポイントが一つあります。</p>\n<p>2018年頃にIntelのCPUではSpectre/Meltdownなど脆弱性が発見されました。</p>\n<p>この問題の対策で各OSではパッチが当てられました。このパッチによってSandyBridgeでは発売当時に比べてCPUの性能がだいぶ落ちています。</p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/33/soc.webp",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "ネットワーク"
            ],
            "date_published": "2024-03-29T00:32:00+09:00",
            "date_modified": "2024-03-31T00:35:35+09:00"
        },
        {
            "id": "https://corkborg.github.io/publii-is-good-website-generator/",
            "url": "https://corkborg.github.io/publii-is-good-website-generator/",
            "title": "使いやすいエディターで静的サイト生成できるPubliiがおすすめな話",
            "summary": "最近はVercel、Netlify、Github Pageなどを活用してHTML、CSSだけをホスティングするシンプルなWebサイトが流行っていますよね。 これらの利点は運用料金の安さです。一般的なWebサイトのようにサーバやデータベースなどを用意すると個人にしては運用費がかかりますが、静的サイトだと月額無料から数百円で運用できます。 かく言うこのサイト（塩の惑星）も現在はGithub Pageというホスティングサービスを使っていてお金がかかっていません。&hellip;",
            "content_html": "<p>最近はVercel、Netlify、Github Pageなどを活用してHTML、CSSだけをホスティングするシンプルなWebサイトが流行っていますよね。</p>\n<p>これらの利点は運用料金の安さです。一般的なWebサイトのようにサーバやデータベースなどを用意すると個人にしては運用費がかかりますが、静的サイトだと月額無料から数百円で運用できます。</p>\n<p>かく言うこのサイト（塩の惑星）も現在はGithub Pageというホスティングサービスを使っていてお金がかかっていません。</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/31/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio.png\" alt=\"PubliiからGithub Pageに連携する図\" width=\"611\" height=\"285\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-xl.png 1200w\"></figure>\n<h2>なぜ無料のサイトサービスではなく静的サイトジェネレータなのか？</h2>\n<p>BloggerやGoogle Pageなどの無料のWebサイトサービスでは決まった形のWebサイトしか作れません。</p>\n<p>静的サイトジェネレータはHTMLやCSSの知識があればカスタマイズの幅は無限大です。デザインにこだわる人は静的サイトジェネレータがおすすめです。</p>\n<p>私はJavaScriptを使ったサイトを作りたかったので静的サイトジェネレータを検討し始めました。</p>\n<h2>一般的な静的サイトジェネレータで文章を打つのは辛い</h2>\n<p>著名な静的サイトジェネレータといえば、NextJSやHUGOなどですがこれらはプログラミングしたい人には良いですが、文章をたくさん書く場合には辛いです。</p>\n<p>Markdown、HTML…嫌いじゃないですがこれらでたくさんの記事を書きたくないです。</p>\n<h2>Publii: 静的サイトジェネレータなのにGUIエディタが使える</h2>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-1.30.41.png\" alt=\"Publiiの編集画面. Notion風のリッチなエディタ\" width=\"524\" height=\"310\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-xl.png 1200w\">\n<figcaption >Publiiの編集画面. Notion風のリッチなエディタ</figcaption>\n</figure>\n<p>PubliiはMacやWindowsにインストールして使うアプリ形式になっています。</p>\n<p>Publiiのアプリ上でページを書くとPubliiが静的サイト生成を行いアップロードしてくれます。</p>\n<p>文章編集機能は非常に充実していて、大文字、斜線、リンク、見出し、リスト、画像。なにもかの操作が非常にスムーズです。</p>\n<p>もちろんHTMLを直書きしたりすることもできます。</p>\n<h2>Publii: SEO対策機能もバッチリ</h2>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-2.24.24.png\" alt=\"Publii SEO設定画面\" width=\"1906\" height=\"1008\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-xl.png 1200w\"></figure>\n<p>PubliiにはSEO関連の機能が充実しています。</p>\n<p>画像の圧縮、JSON-LDはもちろんのこと、noindex設定、Slugなど細かく設定できます。</p>\n<p>このサイト（塩の惑星）は内容が雑多な感じでSEO的にはあまり良くない感じですが、記事を書いた時のGoogle検索の平均掲載順位は１5位くらいのようで問題なさそうです。</p>\n<h2>Publiiの今のところの弱点はテーマが少ないこと</h2>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-2.09.40.png\" alt=\"Publiiのマーケットプレイス\" width=\"423\" height=\"337\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-xl.png 1200w\"></figure>\n<p>ブログサービスといえば豊富なテーマが重要です。Publiiもテーマ機能があるのですが、テーマ数が多くないです（有料の物を入れても少ない）。</p>\n<p><a href=\"https://marketplace.getpublii.com/themes/\" target=\"_blank\" rel=\"noopener noreferrer\"></a><a href=\"https://marketplace.getpublii.com/themes/\" target=\"_blank\" rel=\"noopener noreferrer\">Publii Themes</a></p>\n<p>数少ないテーマもアメリカで流行っているサイト風で、日本向けでは使いづらい気がします。</p>\n<p>テーマが少ない理由はまだPubliiが世間にはあまり知られていないマイナーな存在だからではないかと思います。</p>\n<h3>テーマの自作</h3>\n<p>塩の惑星ではPubliiのテーマを自作しています。この作業はなかなか骨が折れました。</p>\n<p>特にHTML、CSSが得意ではない人にはハードルが高い作業でしょう…。</p>\n<p>テーマ開発については現状下記の２つくらいしか情報がないと思います。</p>\n<p><a href=\"https://getpublii.com/dev/\" target=\"_blank\" rel=\"noopener noreferrer\">Publii公式のテーマ開発ガイド（英語）</a><br><a href=\"https://github.com/SimonPadbury/Publii-Bootstrap-Starter/blob/master/TUTORIALS/00-introduction.md\" target=\"_blank\" rel=\"noopener noreferrer\">SimonPadburyさんのテーマ開発チュートリアル（英語）</a></p>\n<h2>最後に</h2>\n<p>Publiiは使いやすいサイトジェネレータです。Notion風のエディターでWebサイトやブログなどを作りたいと思っている人にはすごくおすすめです。</p>\n<p><a href=\"https://getpublii.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Publii公式サイト</a></p>\n<p>Publiiがもっと流行ると良いなと思っているので、Publiiの使用を検討していて気になる点がある人、Publiiのテーマ開発で困っている人などは力になれるかもしれないのでぜひ塩の惑星に<a href=\"https://corkborg.github.io/contact/\">問い合わせ</a>て見てください。</p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/31/freetiers-post-featured-image.jpeg",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "プログラミング"
            ],
            "date_published": "2024-03-28T01:30:19+09:00",
            "date_modified": "2024-04-30T00:20:46+09:00"
        },
        {
            "id": "https://corkborg.github.io/spirogyra-measures-in-aquarium/",
            "url": "https://corkborg.github.io/spirogyra-measures-in-aquarium/",
            "title": "硬いアオミドロ（糸状ゴケ）を対策する方法について個人的な経験から解説",
            "summary": "アクアリウムで困る物といえコケ。ほとんどのものは割とどうにかなるのですが、アオミドロについては手を焼かされてきたので、情報整理も兼ねて対策方法について色々紹介します。 アオミドロと言っても近縁の種が500種ほどいるようです。それぞれ特徴が違い、対処方法も異なることがあり、読者の方が悩んでいるものと違うと良くないので紹介します。 私の家のアオミドロはどこかの通販で買った水草についてきたものです。アクアリウムショップでも非常に似ているものを見かける気がするので日本の水草流通網では一般的な物なのではないかと思っています。 アオミドロというとヌルヌルしててとろろ状のものもいますが、このアオミドロは硬くあまりヌルヌルしていないです。 大きい集合体になると目立ちますが、一本一本は光のあたり具合によっては見えないようなサイズです。&hellip;",
            "content_html": "<p>アクアリウムで困る物といえコケ。ほとんどのものは割とどうにかなるのですが、アオミドロについては手を焼かされてきたので、情報整理も兼ねて対策方法について色々紹介します。</p>\n<h2>対処したアオミドロについて</h2>\n<p>アオミドロと言っても近縁の種が500種ほどいるようです。それぞれ特徴が違い、対処方法も異なることがあり、読者の方が悩んでいるものと違うと良くないので紹介します。</p>\n<p>私の家のアオミドロはどこかの通販で買った水草についてきたものです。アクアリウムショップでも非常に似ているものを見かける気がするので日本の水草流通網では一般的な物なのではないかと思っています。</p>\n<p>アオミドロというとヌルヌルしててとろろ状のものもいますが、このアオミドロは硬くあまりヌルヌルしていないです。</p>\n<figure class=\"post__image post__image--center\" ><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/28/PXL_20240303_104814278.jpg\" alt=\"硬いアオミドロ（糸状ゴケ）\" width=\"438\" height=\"778\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-xl.jpg 1200w\"></figure>\n<figcaption >定着できていないときは多少柔らかくなる</figcaption>\n</figure>\n<figure class=\"post__image post__image--center\" ><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/28/S20240229_001.jpg\" alt=\"硬いアオミドロ（糸状ゴケ）\" width=\"447\" height=\"335\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/28/responsive/S20240229_001-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-xl.jpg 1200w\"></figure>\n<figcaption >コケにしては硬い</figcaption>\n</figure>\n<figure class=\"post__image post__image--center\" ><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/28/S20240307_015.jpg\" alt=\"硬いアオミドロ（糸状ゴケ）200倍画像\" width=\"521\" height=\"293\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/28/responsive/S20240307_015-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-xl.jpg 1200w\"></figure>\n<figcaption >アオミドロの細胞には螺旋模様があるようだが手持ちのルーペではそこまで見えなかった</figcaption>\n</figure>\n<h3>手で完璧に取り除くのが難しい</h3>\n<p>大きい集合体になると目立ちますが、一本一本は光のあたり具合によっては見えないようなサイズです。</p>\n<p>アオミドロは破片が少しでも残っていると増え始めるので手で対処するのが難しいです</p>\n<h3>貝はほとんど食べない</h3>\n<p>石巻貝、ヒメタニシ、カワニナ、レッドラムズホーンなどを飼育しています。</p>\n<p>これらの貝は、お腹が減っていてもアオミドロについてはほとんど食べてくれないです。</p>\n<h3>エビでも食べないもの、食べるものがいる</h3>\n<p>家ではトゲナシヌマエビ、ミナミヌマエビを主に飼育しているのですが、これらはあまり食べないようでした。</p>\n<p>後述しますが、ヤマトヌマエビ、アルジーライムシュリンプは効果がありそうです。</p>\n<h2>対策編</h2>\n<h3>アオミドロを侵入させない</h3>\n<p>水槽というのは閉鎖された空間なので侵入させなければ基本的にどんなコケでも繁殖することはありません。</p>\n<p>珪藻、藍藻くらいそこら中にあふれている物だとバイオ研究室並の慎重さを持って作業を行わないと防げないとは思いますが、少なくともアオミドロに関しては私の水槽でも慎重に取り扱っている物は肥料を投入しても発生することはありません。</p>\n<p>アオミドロが侵入する要因になるものは、ソイル、砂利、水、生物（主に貝）、<strong>水草、</strong>流木、<strong>手、</strong>ピンセットなど水槽の中で活用されるすべての物が対象です。</p>\n<p>アオミドロは栄養が足りないときや、外敵が多い時はほとんど目に見えない状態で水草の隙間などに挟まっていたりするので、アオミドロがいなそうに見える水槽から物を移して来る時も慎重に考えて作業を行ったほうが良いです。</p>\n<p>無菌培養物を除くと、短時間で市販の水草からアオミドロを完全に取り除く確実な方法は無いです。そのため、水草を入れ替えたりする趣味がある人はアオミドロはいずれ水槽に侵入する前提で考えたほうが良いかもしれないです。</p>\n<h3>アオミドロは定着できないと弱い</h3>\n<p>まだ小さくて浮遊しているアオミドロは定着できないと、急速に大きくなることができないようです。そのため、定着させないようにすることは効果があるようです。</p>\n<p>アオミドロが定着しやすい所はザラザラした所が多いようで、特にウィローモスに定着しやすいです。そのため、流木からウィローモスを剥がしたりザラザラしたものを減らすことでアオミドロの成長をだいぶ抑えることができます。</p>\n<p>この性質は後述のプレコなどにも関係しているのではないかと思います。</p>\n<h3>外部式フィルターがおすすめ</h3>\n<p>アオミドロは水槽内を漂って拡散するので、それを軽減できるフィルターは重要です。<br>なるべく吸入部にはスポンジを設置せず、浮遊しているアオミドロがそのままフィルターに吸い込まれるようにしたほうが良いです。</p>\n<p>そして、外部式フィルターがおすすめです。</p>\n<p>たとえば、外掛けフィルターは光が入りフィルター部でアオミドロが生存できてしまうようです。内部で繁殖したアオミドロは再拡散されます。そして外部式フィルターは複雑な構造をしていることが多いのでフィルター以外にも様々なパーツの隙間にアオミドロが入り込んでしまうようです。</p>\n<p>外部式フィルターはフィルター部が暗いためアオミドロが繁殖できません。そして、フィルタ内部が長いのでアオミドロが出口から拡散されづらいです。</p>\n<p>アオミドロをフィルター内部に吸い込めず、水槽内の部品が複雑であったり、水槽のライトや外部の光が入ってしまうフィルターは基本的にやめたほうが良さそうです。</p>\n<h3>ヤマトヌマエビ、アルジーライムシュリンプ</h3>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/28/PXL_20240303_102443320.MP-2.jpg\" alt=\"\" width=\"583\" height=\"328\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-xl.jpg 1200w\"></figure>\n<p>アオミドロは基本的にどのコケ対策生体もそんなに食べないのですが、そんな中でもエビはそれなりに食べるのでおすすめです。</p>\n<p>効果が高い種類はヤマトヌマエビとアルジーライムシュリンプの二種です。どちらというとヤマトヌマエビのほうが総合的なコケ処理能力は高いですが、アオミドロ対策についてはアルジーライムシュリンプがおすすめです。</p>\n<p>ヤマトヌマエビは微妙にコケをえり好みするようで、アオミドロを避けたりします。</p>\n<p>アルジーライムシュリンプも食べないときは食べないのですが、避けたりはしません。ノッていると結構なスピードで食べてくれます。</p>\n<p>エビが気まぐれに食べたりする理由ですが、アオミドロを食べているというよりもアオミドロに付着している微生物を食べるついでにアオミドロを食べている感じなのではないかと思います。</p>\n<p>生体のいない水槽で少し置いておいたアオミドロを入れると即座に群がってきて数分で食べ切ってくれることがありますが、水槽内で食べ残されたアオミドロなどは食べきるまで結構時間がかかります。多分アオミドロに付着した微生物を大体食べてしまって美味しく無くなったのだと思います。</p>\n<h4>TIPS: 複数種エビの混泳は基本的にどの種でもやめたほうが良い</h4>\n<p>複数種のヌマエビを同じ水槽にいれても、あまり他種に干渉しないように見えるので問題なさそうに見えるのですが、穏健な種でも地味に他種のエビを攻撃します。そのため、力が弱い種類のエビから徐々に数が減っていきます。</p>\n<p>そして、アルジーライムシュリンプはミナミヌマエビやチェリーシュリンプと交雑してしまいます。コケ取り能力も落ちてしまうのでエビの混泳は避けたほうが良いです。</p>\n<p><strong>水槽内のヌマエビは一種に統一</strong>しましょう。</p>\n<h3>プレコ</h3>\n<p>プレコはほとんどアオミドロを食べません。ただ、プレコがいなくなった水槽で数カ月後に突然アオミドロが繁殖し始めたことを何回か経験したことがあります。そのため、プレコはアオミドロ対策では重要な生体だと思います。</p>\n<p>推測では先で説明した\"アオミドロは定着できないと弱い問題\"と関連が深いのではないかと推測しています。</p>\n<p>プレコは流木や水草、ガラス面などを積極的に舐め回します。そうすると、浮遊しているアオミドロはなかなか定着することができません。そうなると、アオミドロは大きく成長することができなくなります。</p>\n<h3>サイアミーズフライングフォックス</h3>\n<p>サイアミーズフライングフォックスは気まぐれに細長い植物性の物に噛みついて食べる癖があるようです。そのため、アオミドロも結構たくさん食べることがあります。</p>\n<p>ただ、無理してまで食べるようなものではないようで、サイアミーズフライングフォックス泳ぎやすいスペースに食べやすい感じに生えているアオミドロじゃないと食べません。</p>\n<p>餌をやりすぎるとコケを食べなくなったりするので餌はあまりあげないほうが良いです（食べ過ぎでお腹が膨らまない位に調整）。</p>\n<p>ただ、それなりに気性が荒い面があるトラブルメーカーでもあり、大きくなるほどにその傾向が強くなるので導入は慎重に検討したほうが良いです。</p>\n<h3>人手でアオミドロを取る</h3>\n<p>やはりアオミドロ自体を喜んで食べる生体はいないようです。今まで挙げた生体もアオミドロを減らすというよりは、成長を抑えたり、発生を予防したりする面が強いです。</p>\n<p>そのため、アオミドロ対策の生体がアオミドロを食べる傍ら、水槽が安定するまではそれなりの頻度人手でアオミドロを取ることが重要になります。</p>\n<h2>まとめ</h2>\n<p>アオミドロ対策には下記の３つがおすすめです。</p>\n<ul>\n<li>外部式フィルターをガンガン回す</li>\n<li>ヤマトヌマエビ or アルジーライムシュリンプを投入する</li>\n<li>プレコを投入する</li>\n</ul>\n<p>上記を行ったうえで人手で取るのが重要です。</p>\n<p> </p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/28/PXL_20240303_104751641.jpeg",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "植物",
                   "アクアリウム"
            ],
            "date_published": "2024-03-25T02:42:00+09:00",
            "date_modified": "2024-06-01T22:51:08+09:00"
        },
        {
            "id": "https://corkborg.github.io/image-recognition-using-timm-convnextv2/",
            "url": "https://corkborg.github.io/image-recognition-using-timm-convnextv2/",
            "title": "timmのconvnextv2のトレーニング済みモデルを使って画像分析をしてみる",
            "summary": "timmとはPyTorch向けのライブラリで、画像認識系の深層学習の実装を用意してくれている感じのライブラリになっています。 対応している手法を見てみると2024年現在ではvit, resnet, swin, convnextなどをサポートしているようです。&hellip;",
            "content_html": "<p><a href=\"https://timm.fast.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">timm</a>とはPyTorch向けのライブラリで、画像認識系の深層学習の実装を用意してくれている感じのライブラリになっています。</p>\n<p>対応している手法を見てみると2024年現在ではvit, resnet, swin, convnextなどをサポートしているようです。</p>\n<p>主にtimmは新たにモデルをトレーニングして作成する際に使うと思うのですが、すでにトレーニング済みのモデルが用意されていて試しにそれを使うこともできます。</p>\n<p>個人的にtimmの学習済みモデルをfine-tuning（微調整）して見たいと思ったので、とりあえずモデルを動かしてみることにしました。</p>\n<h2>ConvNeXt V2</h2>\n<p>今回使っているConvNeXT V2という手法は、昔から存在するCNNという画像認識手法を活用した2022年に提案された新しい手法です。画像認識の分野では新しいTransformer系よりも精度が良いようです（2022年くらいでは）。</p>\n<p>ConvNeXtはCNN系なので精度比でモデルサイズが小さくて済むようです。そのためメモリにも優しいと思われます。</p>\n<p>手法の技術的な詳細はこれらのサイトに書いてありますが筆者はあまり理解していません。<br><a href=\"https://arxiv.org/abs/2301.00808\">https://arxiv.org/abs/2301.00808</a><br><a href=\"https://arxiv.org/abs/2201.03545\" target=\"_blank\" rel=\"noopener noreferrer\">https://arxiv.org/abs/2201.03545</a></p>\n<h2>画像認識をしてみる</h2>\n<p>まずPythonに必要なものをインストールします。</p>\n<pre class=\"language-bash\"><code>pip install torch timm pillow torchvision</code></pre>\n<p>学習済みモデルはImageNet-1kというデータセットを使っているようなので、ラベルの情報が必要です。こちらにImageNet-1kのラベルをまとめてくれている人がいるのでダウンロードしてlabels.pyという名前に変更します。<br><a href=\"https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a\" target=\"_blank\" rel=\"noopener noreferrer\">https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a</a></p>\n<p>適当なPythonソースコードを作成します。</p>\n<pre class=\"language-python\"><code>import sys\nfrom itertools import zip_longest\n\nimport timm\nimport torch\nfrom PIL import Image\nfrom timm.data import resolve_data_config\nfrom timm.data.transforms_factory import create_transform\n\n\n# 下記からダウンロードしたラベルをlabels.pyとして保存して使用する\n# https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a\nfrom labels import labels\n\nmodel = timm.create_model('convnextv2_tiny.fcmae', pretrained=True)\n# model = timm.create_model(\"convnextv2_huge.fcmae_ft_in22k_in1k_512\", pretrained=True)\nmodel.eval()\n\n# モデル向けに画像を変換してくれる関数を作成\ntransform = create_transform(**resolve_data_config(model.pretrained_cfg, model=model), is_training=False)\n\n# 変換する\nimage = Image.open(sys.argv[1]).convert('RGB')\nimage = transform(image).unsqueeze(0)\n\n# 推論\nout = model(image)\n\n# 予想された確率の合計が１になるように変換\nprobabilities = out.softmax(dim=1)\n\n# 上位５つの推論結果を取得\ntop5_probabilities, top5_class_indices = torch.topk(probabilities * 100, k=5)\n\nfor c, v in zip_longest(top5_class_indices[0], top5_probabilities[0]):\n    label_id = c.item()  # ラベルのid\n    label_name = labels[label_id]  # ラベルの英名\n    label_probability = v.item()  # 確率\n    print(label_id, label_name, label_probability)</code></pre>\n<p>適当な画像で推論してみます。</p>\n<pre class=\"language-bash\"><code>python predict.py image.jpg</code></pre>\n<p>ImageNet-1kは小さいデータセットなので動物などわかりやすい画像で試してみるのが良さそうです。</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://corkborg.github.io/media/posts/29/sukurinsiyotuto-2024-03-24-16.40.09.png\" alt=\"ImageNet-1K dataset records\" width=\"523\" height=\"300\" sizes=\"(max-width: 1200px) 100vw, 1200px\" srcset=\"https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-xs.png 300w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-sm.png 480w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-md.png 749w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-xl.png 1200w\"></figure>\n<p>めちゃめちゃな結果が返ってきたと思います。</p>\n<p>試しに使用した<span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">学習済みモデル（</span><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">convnextv2_tiny.fcmae）が非力だからです。</span></p>\n<div>\n<div> </div>\n<div>ソースコードのコメントを解除して大きめで精度の良いモデルを有効化します（モデルサイズが2GBくらいあります）。</div>\n<div>\n<pre class=\"language-bash\"><code># model = timm.create_model('convnextv2_tiny.fcmae', pretrained=True)\nmodel = timm.create_model(\"convnextv2_huge.fcmae_ft_in22k_in1k_512\", pretrained=True)</code></pre>\n</div>\n</div>\n<p>金魚の画像を投入してみた結果です。</p>\n<pre class=\"language-bash\"><code>1 goldfish, Carassius auratus 85.73846435546875\n392 rock beauty, Holocanthus tricolor 8.172449111938477\n393 anemone fish 0.17695628106594086\n973 coral reef 0.15994583070278168</code></pre>\n<p>うまく推論できていそうです。（金魚は学名だとCarassius auratusと言うのか…）</p>\n<h2>timmの詳細</h2>\n<p>timmの使い方はここに書いてあります。<br><a href=\"https://huggingface.co/docs/hub/timm\" target=\"_blank\" rel=\"noopener noreferrer\">https://huggingface.co/docs/hub/timm</a></p>\n<p>timmの推論済みConvNeXTモデルの詳細は下記に書いてあります。<br><a href=\"https://huggingface.co/timm/convnextv2_tiny.fcmae\" target=\"_blank\" rel=\"noopener noreferrer\">https://huggingface.co/timm/convnextv2_tiny.fcmae</a></p>\n<p> </p>",
            "image": "https://corkborg.github.io/media/posts/29/fish_kingyo2.png",
            "author": {
                "name": "ミズソバ"
            },
            "tags": [
                   "プログラミング"
            ],
            "date_published": "2024-03-24T16:09:18+09:00",
            "date_modified": "2024-06-03T02:39:06+09:00"
        }
    ]
}
