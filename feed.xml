<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>塩の惑星</title>
    <link href="https://corkborg.github.io/feed.xml" rel="self" />
    <link href="https://corkborg.github.io" />
    <updated>2024-04-01T21:51:08+09:00</updated>
    <author>
        <name>ミズソバ</name>
    </author>
    <id>https://corkborg.github.io</id>

    <entry>
        <title>日本語や漢字の日付をPythonのdatetimeに変換するライブラリを作った</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/created-kanji-to-time/"/>
        <id>https://corkborg.github.io/created-kanji-to-time/</id>
        <media:content url="https://corkborg.github.io/media/posts/35/Ming-Cheng-Wei-She-Ding-huairu-1711796415700.drawio-1.png" medium="image" />
            <category term="日本語周り"/>
            <category term="Python"/>

        <updated>2024-03-30T19:21:34+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/35/Ming-Cheng-Wei-She-Ding-huairu-1711796415700.drawio-1.png" alt="" />
                    日本語文章を解析しているときに地味に困る物の一つに漢字等の日本語で書かれた年月日があります。 今回は、日本語で書かれた日付のデータをPythonのdatetime、timedeltaに変換するライブラリを作成したので紹介します。 ※ datetimeは日時、timedeltaは時間（時間差）を取り扱うPython標準オブジェクトです kanji_to_timeという名前のライブラリです。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/35/Ming-Cheng-Wei-She-Ding-huairu-1711796415700.drawio-1.png" class="type:primaryImage" alt="" /></p>
                <p>日本語文章を解析しているときに地味に困る物の一つに漢字等の日本語で書かれた年月日があります。</p>
<p>今回は、日本語で書かれた日付のデータをPythonのdatetime、timedeltaに変換するライブラリを作成したので紹介します。</p>
<p>※ datetimeは日時、timedeltaは時間（時間差）を取り扱うPython標準オブジェクトです</p>
<hr>
<p><strong>kanji_to_time</strong>という名前のライブラリです。</p>
<p><a href="https://github.com/corkborg/kanji_to_time" target="_blank" rel="noopener noreferrer">https://github.com/corkborg/kanji_to_time</a><br><a href="https://pypi.org/project/kanji-to-time/" target="_blank" rel="noopener noreferrer">https://pypi.org/project/kanji-to-time/</a></p>
<p>こんな感じでインストールできます。</p>
<pre class="language-bash"><code>pip install kanji_to_time</code></pre>
<h2>こんな変換ができます</h2>
<p>半角、漢字混じり、漢数字、全角数字などを変換できます。</p>
<pre class="language-python"><code>&gt;&gt;&gt; import kanji_to_time as ktt
&gt;&gt;&gt; text = "2024年4月5日22時30分4秒"
&gt;&gt;&gt; ktt.to_datetime(text)
datetime.datetime(2024, 4, 5, 22, 30, 4)</code></pre>
<pre class="language-python"><code>&gt;&gt;&gt; ktt.to_timedelta("マイナス七〇億分")
datetime.timedelta(days=-4861112, seconds=76800)</code></pre>
<p>旧字の漢数字などにも対応しています。</p>
<pre class="language-python"><code>&gt;&gt;&gt; ktt.to_datetime("弐零弐参年伍月肆日")
datetime.datetime(2023, 5, 4, 0, 0)</code></pre>
<p>今のところ億の位まで対応しています。</p>
<pre class="language-python"><code>&gt;&gt;&gt; ktt.to_timedelta("3億二三万千７十１秒間")
datetime.timedelta(days=3474, seconds=77471)</code></pre>
<h2>機能ポイント</h2>
<ul>
<li>数値部分の文字数が可変でも変換可能です（ゼロ埋めの必要が無い）</li>
<li>半角全角漢数字が混じっていても変換することができます。</li>
<li>20秒、20秒間のように位の後ろに間が付いていても同様に変換することができます（timdelta変換のみ）。</li>
</ul>
<h2>どうやって作ったか？</h2>
<p>当初、そんなに難しいコードを書かなくても解決できるだろうと考えていました。</p>
<p>しかし、単純そうに見えて時間の変換はルールが多くてシンプルなコードでは実現できないことがわかりました。</p>
<p>このようなルールがある文章を処理する場合、一番手軽なのは正規表現です。私も当初はreを使って解決しようと思ったのですが、実装している途中で正規表現で実現すると大変複雑で自分ですら理解できないようなコードになってしまうことに気づきました。</p>
<p>手間を惜しまなければ、ルールが複雑な文章（文法）を相手にする際にはパーサージェネレータを使ったほうが良いです。Pythonでおすすめのパーサージェネレータを調べた所Larkというものがヒットしたのでこれを使用して作成しました。</p>
<p><a href="https://lark-parser.readthedocs.io/en/stable/">Larkの公式ドキュメント</a></p>
<p>今回は、kanji_to_timeのパーサの中でも数字の周りの文法ルールだけを抜き出して紹介します。</p>
<pre class="language-javascript"><code>number: (MINUS | PLUS)? mixed_number_with_unit
mixed_number_with_unit: unit_oku? unit_man? unit_sen? unit_juu? mixed_number?

MINUS: "-" | "ー" | "マイナス" | "ひく" | "引く"
PLUS: "+" | "＋" | "プラス" | "たす" | "足す"

unit_oku: mixed_number "億" // 億は数値が必須
unit_man: mixed_number "万" // 万は数値が必須
unit_sen: mixed_number? "千"
unit_juu: mixed_number? "十"

mixed_number: (ZENKAKU_DIGIT | KANJI_DIGIT | DIGIT)+ // 漢字混合で小数点のサポートは行わない
KANJI_DIGIT: "一" | "壱"
           | "二" | "弐"
           | "三" | "参"
           | "四" | "肆"
           | "五" | "伍"
           | "六" | "陸"
           | "七" | "漆"
           | "八" | "捌"
           | "九" | "玖"
           | "〇" | "ゼロ" | "零"
           | "○" | "◯" // 一応丸もサポートしておく
ZENKAKU_DIGIT: "０" | "１" | "２" | "３" | "４" | "５" | "６" | "７" | "８" | "９"</code></pre>
<p>KANJI_DIGITという漢数字を読むだけの文法のルールをがありますが、このルールはmixed_numberというルールに参照されています。そして、mixed_numberはkanji_digitの他に全角、半角数値も参照していてそれらを統合しています。</p>
<p>このように局所的な文法ルールが大域的な文法ルールで参照されることで、文法を木構造で表現することができます。</p>
<p>上記のルールでは最終的にnumberという一番大域的なルールにそれぞれのルールが参照されている形になっています。</p>
<p>Larkの文法ルールを用意したら、Python側でルールを実際に変換するコードを書いてやれば複雑なルールの文章を構造的にプログラミング言語の型に変換することができます。大変便利ですね。</p>
<p>全体のkanji_to_timeの文法ルール全体はここから見れます。<br><a href="https://github.com/corkborg/kanji_to_time/blob/main/kanji_to_time/grammer/kanji_to_time.lark">https://github.com/corkborg/kanji_to_time/blob/main/kanji_to_time/grammer/kanji_to_time.lark</a></p>
<h2>一応漢数字の変換もできる</h2>
<p>Larkの文法定義を見てもらうとわかるのですが、数値変換だけの文法ルールが存在するので数値変換だけを行うこともできます。</p>
<p>一応調査用に漢数字から数値に変換する機能もあります。</p>
<pre class="language-python"><code>&gt;&gt;&gt; ktt.to_number("八千七十二")
8072</code></pre>
<p>ただ、漢数字の数値変換についてはKanjizeという優れた先行ライブラリが存在するのでこの用途だけであればこちらを使ったほうが良いと思います。<br><a href="https://github.com/nagataaaas/Kanjize" target="_blank" rel="noopener noreferrer">https://github.com/nagataaaas/Kanjize</a></p>
<h2>サポート</h2>
<p>このような日付文字列を変換する際にはぜひ使ってみてください。</p>
<p>不具合などに気づいたらissuesに投稿してもらえると嬉しいです。<br><a href="https://github.com/corkborg/kanji_to_time/issues" target="_blank" rel="noopener noreferrer">https://github.com/corkborg/kanji_to_time/issues</a></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>RaspberryPi 5の性能はSandyBridge i5-2500に近いことに気づいた</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/raspberrypi-5-vs-intel-core-i5-2500/"/>
        <id>https://corkborg.github.io/raspberrypi-5-vs-intel-core-i5-2500/</id>
        <media:content url="https://corkborg.github.io/media/posts/33/soc.webp" medium="image" />
            <category term="ネットワーク"/>

        <updated>2024-03-29T00:32:00+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/33/soc.webp" alt="" />
                    最近、RaspberryPi5が日本で発売されましたね。 当時は早いと言われていたRaspberryPi4よりも二倍以上も性能が高いようです。 公式によるRaspberryPi5のベンチマーク ただ、RaspberryPi同士の比較ではどれくらい実用的な性能を持っているのかわかりません。 そこでSandyBridgeに目をつけました。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/33/soc.webp" class="type:primaryImage" alt="" /></p>
                <p>最近、RaspberryPi5が日本で発売されましたね。</p>
<p>当時は早いと言われていたRaspberryPi4よりも二倍以上も性能が高いようです。</p>
<p><a href="https://www.raspberrypi.com/news/benchmarking-raspberry-pi-5/">公式によるRaspberryPi5のベンチマーク</a></p>
<p>ただ、RaspberryPi同士の比較ではどれくらい実用的な性能を持っているのかわかりません。<br>そこでSandyBridgeに目をつけました。</p>
<h2>SandyBridge</h2>
<p>SandyBridgeは2011年頃のCPUで、通常はあまり性能向上に寄与しない省電力周りの設計改善を極めたら非常に性能が向上したことで話題になったIntelのCPUシリーズです。</p>
<p>今となっては１０年以上も昔のCPUですが、根強いファンが多く未だに使っている人がそれなりにいるようです。私も数年前までファイルサーバとしてSandyBridge i5-2500を使っていました。</p>
<p><a href="https://dic.nicovideo.jp/a/sandy%E3%81%A7%E5%8D%81%E5%88%86%E3%81%8A%E3%81%98%E3%81%95%E3%82%93">Sandyで十分おじさん</a></p>
<p>流石に今は使ってないですが…。</p>
<h2>Geekbench6での比較</h2>
<p>RaspberryPi5で検索して一番にヒットするものは、Geekbench5なのでGeekbench6の結果を探しました。オーバクロックしていない2.4GHzで動作させているRasberryPi5の結果を選びました。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/33/sukurinsiyotuto-2024-03-30-0.41.49.png" alt="" width="1716" height="594" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-xs.png 300w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-sm.png 480w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-md.png 749w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.41.49-xl.png 1200w"></figure>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/33/sukurinsiyotuto-2024-03-30-0.42.22.png" alt="" width="1736" height="584" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-xs.png 300w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-sm.png 480w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-md.png 749w ,https://corkborg.github.io/media/posts/33/responsive/sukurinsiyotuto-2024-03-30-0.42.22-xl.png 1200w"></figure>
<p><a href="https://browser.geekbench.com/v5/cpu/21773016"></a><a href="https://browser.geekbench.com/v5/cpu/21773016">Geekbench6 Raspberry Pi 5 Model B Rev 1.0</a><br><a href="https://browser.geekbench.com/v5/cpu/21773016"></a><a href="https://browser.geekbench.com/processors/intel-core-i5-2500">Geekbench6 i5-2500</a></p>
<p>シングルコア性能だとRaspberryPi 5のほうが何割か早いです。<br>マルチコア性能だとi5-2500のほうが少し早いようです。</p>
<p>RaspberryPi5とi5-2500の性能は拮抗していそうです。</p>
<h2>i5-2500から考えるRaspberryPi5の性能</h2>
<p>RaspberryPi5とても早いですね。</p>
<p>PCとしてもサーバとしても実用に近いスペックなのではないかと思います。私はi5-2500で5人位が使用するMinecraftサーバーなどを運用したことがあるのでそのようなタスクはこなせそうな気がします。</p>
<p>昔、RaspberryPi400というPCを買ったのですが性能がイマイチだったので、5ベースのRaspberryPi500とか発売して欲しいですね。</p>
<h3>SandyBridgeの性能は発売当初より落ちている？</h3>
<p>SandyBridgeとほかのCPUの比較する際に一つ注意するポイントが一つあります。</p>
<p>2018年頃にIntelのCPUではSpectre/Meltdownなど脆弱性が発見されました。</p>
<p>この問題の対策で各OSではパッチが当てられました。このパッチによってSandyBridgeでは発売当時に比べてCPUの性能がだいぶ落ちています。</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>使いやすいエディターで静的サイト生成できるPubliiがおすすめな話</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/publii-is-good-website-generator/"/>
        <id>https://corkborg.github.io/publii-is-good-website-generator/</id>
        <media:content url="https://corkborg.github.io/media/posts/31/freetiers-post-featured-image.jpeg" medium="image" />

        <updated>2024-03-28T01:30:19+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/31/freetiers-post-featured-image.jpeg" alt="Publii" />
                    最近はVercel、Netlify、Github Pageなどを活用してHTML、CSSだけをホスティングするシンプルなWebサイトが流行っていますよね。 これらの利点は運用料金の安さです。一般的なWebサイトのようにサーバやデータベースなどを用意すると個人にしては運用費がかかりますが、静的サイトだと月額無料から数百円で運用できます。 かく言うこのサイト（塩の惑星）も現在はGithub Pageというホスティングサービスを使っていてお金がかかっていません。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/31/freetiers-post-featured-image.jpeg" class="type:primaryImage" alt="Publii" /></p>
                <p>最近はVercel、Netlify、Github Pageなどを活用してHTML、CSSだけをホスティングするシンプルなWebサイトが流行っていますよね。</p>
<p>これらの利点は運用料金の安さです。一般的なWebサイトのようにサーバやデータベースなどを用意すると個人にしては運用費がかかりますが、静的サイトだと月額無料から数百円で運用できます。</p>
<p>かく言うこのサイト（塩の惑星）も現在はGithub Pageというホスティングサービスを使っていてお金がかかっていません。</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/31/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio.png" alt="PubliiからGithub Pageに連携する図" width="611" height="285" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/Ming-Cheng-Wei-She-Ding-huairu-1711609800667.drawio-xl.png 1200w"></figure>
<h2>なぜ無料のサイトサービスではなく静的サイトジェネレータなのか？</h2>
<p>BloggerやGoogle Pageなどの無料のWebサイトサービスでは決まった形のWebサイトしか作れません。</p>
<p>静的サイトジェネレータはHTMLやCSSの知識があればカスタマイズの幅は無限大です。デザインにこだわる人は静的サイトジェネレータがおすすめです。</p>
<p>私はJavaScriptを使ったサイトを作りたかったので静的サイトジェネレータを検討し始めました。</p>
<h2>一般的な静的サイトジェネレータで文章を打つのは辛い</h2>
<p>著名な静的サイトジェネレータといえば、NextJSやHUGOなどですがこれらはプログラミングしたい人には良いですが、文章をたくさん書く場合には辛いです。</p>
<p>Markdown、HTML…嫌いじゃないですがこれらでたくさんの記事を書きたくないです。</p>
<h2>Publii: 静的サイトジェネレータなのにGUIエディタが使える</h2>
<figure class="post__image post__image--center" ><img loading="lazy" src="https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-1.30.41.png" alt="Publiiの編集画面. Notion風のリッチなエディタ" width="524" height="310" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-1.30.41-xl.png 1200w">
<figcaption >Publiiの編集画面. Notion風のリッチなエディタ</figcaption>
</figure>
<p>PubliiはMacやWindowsにインストールして使うアプリ形式になっています。</p>
<p>Publiiのアプリ上でページを書くとPubliiが静的サイト生成を行いアップロードしてくれます。</p>
<p>文章編集機能は非常に充実していて、大文字、斜線、リンク、見出し、リスト、画像。なにもかの操作が非常にスムーズです。</p>
<p>もちろんHTMLを直書きしたりすることもできます。</p>
<h2>Publii: SEO対策機能もバッチリ</h2>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-2.24.24.png" alt="Publii SEO設定画面" width="1906" height="1008" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.24.24-xl.png 1200w"></figure>
<p>PubliiにはSEO関連の機能が充実しています。</p>
<p>画像の圧縮、JSON-LDはもちろんのこと、noindex設定、Slugなど細かく設定できます。</p>
<p>このサイトは内容が雑多な感じですが、Google検索での平均掲載順位が１5位くらいのようで問題なさそうです。</p>
<h2>Publiiの今のところの弱点はテーマが少ないこと</h2>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/31/sukurinsiyotuto-2024-03-28-2.09.40.png" alt="Publiiのマーケットプレイス" width="423" height="337" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-xs.png 300w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-sm.png 480w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-md.png 749w ,https://corkborg.github.io/media/posts/31/responsive/sukurinsiyotuto-2024-03-28-2.09.40-xl.png 1200w"></figure>
<p>ブログサービスといえば豊富なテーマが重要です。Publiiもテーマ機能があるのですが、テーマ数が多くないです（有料の物を入れても少ない）。</p>
<p><a href="https://marketplace.getpublii.com/themes/" target="_blank" rel="noopener noreferrer"></a><a href="https://marketplace.getpublii.com/themes/" target="_blank" rel="noopener noreferrer">Publii Themes</a></p>
<p>数少ないテーマもアメリカで流行っているサイト風で、日本向けでは使いづらい気がします。</p>
<p>テーマが少ない理由はまだPubliiが世間にはあまり知られていないマイナーな存在だからではないかと思います。</p>
<h3>テーマの自作</h3>
<p>塩の惑星ではPubliiのテーマを自作しています。この作業はなかなか骨が折れました。</p>
<p>特にHTML、CSSが得意ではない人にはハードルが高い作業でしょう…。</p>
<p>テーマ開発については現状下記の２つくらいしか情報がないと思います。</p>
<p><a href="https://getpublii.com/dev/" target="_blank" rel="noopener noreferrer">Publii公式のテーマ開発ガイド（英語）</a><br><a href="https://github.com/SimonPadbury/Publii-Bootstrap-Starter/blob/master/TUTORIALS/00-introduction.md" target="_blank" rel="noopener noreferrer">SimonPadburyさんのテーマ開発チュートリアル（英語）</a></p>
<h2>最後に</h2>
<p>Publiiは使いやすいサイトジェネレータです。Notion風のエディターでWebサイトやブログなどを作りたいと思っている人にはすごくおすすめです。</p>
<p><a href="https://getpublii.com/" target="_blank" rel="noopener noreferrer">Publii公式サイト</a></p>
<p>Publiiがもっと流行ると良いなと思っているので、Publiiの使用を検討していて気になる点がある人、Publiiのテーマ開発で困っている人などは力になれるかもしれないのでぜひ塩の惑星に<a href="https://corkborg.github.io/contact/">問い合わせ</a>て見てください。</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>硬いアオミドロ（糸状ゴケ）を対策する方法について個人的な経験から解説</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/spirogyra-measures-in-aquarium/"/>
        <id>https://corkborg.github.io/spirogyra-measures-in-aquarium/</id>
        <media:content url="https://corkborg.github.io/media/posts/28/PXL_20240303_104751641.jpeg" medium="image" />
            <category term="アクアリウム"/>

        <updated>2024-03-25T02:42:00+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/28/PXL_20240303_104751641.jpeg" alt="アオミドロに絡まれるクリプトコリネ" />
                    アクアリウムで困る物といえコケ。ほとんどのものは割とどうにかなるのですが、アオミドロについては手を焼かされてきたので、情報整理も兼ねて対策方法について色々紹介します。 アオミドロと言っても近縁の種が500種ほどいるようです。それぞれ特徴が違い、対処方法も異なることがあり、読者の方が悩んでいるものと違うと良くないので紹介します。 私の家のアオミドロはどこかの通販で買った水草についてきたものです。アクアリウムショップでも非常に似ているものを見かける気がするので日本の水草流通網では一般的な物なのではないかと思っています。 アオミドロというとヌルヌルしててとろろ状のものもいますが、このアオミドロは硬くあまりヌルヌルしていないです。 大きい集合体になると目立ちますが、一本一本は光のあたり具合によっては見えないようなサイズです。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/28/PXL_20240303_104751641.jpeg" class="type:primaryImage" alt="アオミドロに絡まれるクリプトコリネ" /></p>
                <p>アクアリウムで困る物といえコケ。ほとんどのものは割とどうにかなるのですが、アオミドロについては手を焼かされてきたので、情報整理も兼ねて対策方法について色々紹介します。</p>
<h2>対処したアオミドロについて</h2>
<p>アオミドロと言っても近縁の種が500種ほどいるようです。それぞれ特徴が違い、対処方法も異なることがあり、読者の方が悩んでいるものと違うと良くないので紹介します。</p>
<p>私の家のアオミドロはどこかの通販で買った水草についてきたものです。アクアリウムショップでも非常に似ているものを見かける気がするので日本の水草流通網では一般的な物なのではないかと思っています。</p>
<p>アオミドロというとヌルヌルしててとろろ状のものもいますが、このアオミドロは硬くあまりヌルヌルしていないです。</p>
<figure class="post__image post__image--center" ><figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/28/PXL_20240303_104814278.jpg" alt="硬いアオミドロ（糸状ゴケ）" width="438" height="778" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_104814278-xl.jpg 1200w"></figure>
<figcaption >定着できていないときは多少柔らかくなる</figcaption>
</figure>
<figure class="post__image post__image--center" ><figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/28/S20240229_001.jpg" alt="硬いアオミドロ（糸状ゴケ）" width="447" height="335" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/28/responsive/S20240229_001-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/S20240229_001-xl.jpg 1200w"></figure>
<figcaption >コケにしては硬い</figcaption>
</figure>
<figure class="post__image post__image--center" ><figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/28/S20240307_015.jpg" alt="硬いアオミドロ（糸状ゴケ）200倍画像" width="521" height="293" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/28/responsive/S20240307_015-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/S20240307_015-xl.jpg 1200w"></figure>
<figcaption >アオミドロの細胞には螺旋模様があるようだが手持ちのルーペではそこまで見えなかった</figcaption>
</figure>
<h3>手で完璧に取り除くのが難しい</h3>
<p>大きい集合体になると目立ちますが、一本一本は光のあたり具合によっては見えないようなサイズです。</p>
<p>アオミドロは破片が少しでも残っていると増え始めるので手で対処するのが難しいです</p>
<h3>貝はほとんど食べない</h3>
<p>石巻貝、ヒメタニシ、カワニナ、レッドラムズホーンなどを飼育しています。</p>
<p>これらは多くのコケは積極的に食べてくれるのですが、このアオミドロに関してはお腹が減っていてもアオミドロについてはほとんど食べてくれないです。</p>
<h3>エビでも食べないもの、食べるものがいる</h3>
<p>家ではトゲナシヌマエビ、ミナミヌマエビを主に飼育しているのですが、これらはあまり食べないようでした。</p>
<p>後述しますが、ヤマトヌマエビ、アルジーライムシュリンプは効果がありそうです。</p>
<h2>対策編</h2>
<h3>アオミドロを侵入させない</h3>
<p>水槽というのは閉鎖された空間なので侵入させなければ基本的にどんなコケでも繁殖することはありません。</p>
<p>珪藻、藍藻くらいそこら中にあふれている物だとバイオ研究室並の慎重さを持って作業を行わないと防げないとは思いますが、少なくともアオミドロに関しては私の水槽でも慎重に取り扱っている物は肥料を投入しても発生することはありません。</p>
<p>アオミドロが侵入する要因になるものは、ソイル、砂利、水、生物（主に貝）、<strong>水草、</strong>流木、<strong>手、</strong>ピンセットなど水槽の中で活用されるすべての物が対象です。</p>
<p>アオミドロは栄養が足りないときや、外敵が多い時はほとんど目に見えない状態で水草の隙間などに挟まっていたりするので、アオミドロがいなそうに見える水槽から物を移して来る時も慎重に考えて作業を行ったほうが良いです。</p>
<p>無菌培養物を除くと、短時間で市販の水草からアオミドロを完全に取り除く確実な方法は無いです。そのため、アオミドロはいずれ水槽に侵入する前提で考えたほうが良いかもしれないです。</p>
<h3>アオミドロは定着できないと弱い</h3>
<p>まだ小さくて浮遊しているアオミドロは定着できないと、急速に大きくなることができないようです。そのため、定着させないようにすることは効果があるようです。</p>
<p>アオミドロが定着しやすい所はザラザラした所が多いようで、特にウィローモスに定着しやすいです。そのため、流木からウィローモスを剥がしたりザラザラしたものを減らすことでアオミドロの成長をだいぶ抑えることができます。</p>
<p>この性質は後述のプレコなどにも関係しているのではないかと思います。</p>
<h3>外部式フィルターがおすすめ</h3>
<p>アオミドロは水槽内を漂って拡散するので、それを軽減できるフィルターは重要です。<br>なるべく吸入部にはスポンジを設置せず、浮遊しているアオミドロがそのままフィルターに吸い込まれるようにしたほうが良いです。</p>
<p>そして、外部式フィルターがおすすめです。</p>
<p>たとえば、外掛けフィルターは光が入りフィルター部でアオミドロが生存できてしまうようです。内部で繁殖したアオミドロは再拡散されます。そして外部式フィルターは複雑な構造をしていることが多いのでフィルター以外にも様々なパーツの隙間にアオミドロが入り込んでしまうようです。</p>
<p>外部式フィルターはフィルター部が暗いためアオミドロが繁殖できません。そして、フィルタ内部が長いのでアオミドロが出口から拡散されづらいです。</p>
<p>アオミドロをフィルター内部に吸い込めず、水槽内の部品が複雑であったり、水槽のライトや外部の光が入ってしまうフィルターは基本的にやめたほうが良さそうです。</p>
<h3>ヤマトヌマエビ、アルジーライムシュリンプ</h3>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/28/PXL_20240303_102443320.MP-2.jpg" alt="" width="583" height="328" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-xs.jpg 300w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-sm.jpg 480w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-md.jpg 749w ,https://corkborg.github.io/media/posts/28/responsive/PXL_20240303_102443320.MP-2-xl.jpg 1200w"></figure>
<p>アオミドロは基本的にどのコケ対策生体もそんなに食べないのですが、そんな中でもエビはそれなりに食べるのでおすすめです。</p>
<p>効果が高い種類はヤマトヌマエビとアルジーライムシュリンプの二種です。どちらというとヤマトヌマエビのほうが総合的なコケ処理能力は高いですが、アオミドロ対策についてはアルジーライムシュリンプがおすすめです。</p>
<p>ヤマトヌマエビは微妙にコケをえり好みするようで、アオミドロを避けたりします。</p>
<p>アルジーライムシュリンプも食べないときは食べないのですが、避けたりはしません。ノッていると結構なスピードで食べてくれます。</p>
<p>エビが気まぐれに食べたりする理由ですが、アオミドロを食べているというよりもアオミドロに付着している微生物を食べるついでにアオミドロを食べている感じなのではないかと思います。</p>
<p>生体のいない水槽で少し置いておいたアオミドロを入れると即座に群がってきて数分で食べ切ってくれることがありますが、食べ残されたアオミドロなどは食べきるまで結構時間がかかります。多分アオミドロに付着した微生物を大体食べてしまって美味しく無くなったのだと思います。</p>
<h4>TIPS: 複数種エビの混泳は基本的にどの種でもやめたほうが良い</h4>
<p>復習種のヌマエビを同じ水槽にいれると一見他種に干渉しないので生活し始めるので問題なさそうに見えるのですが、穏健な種でも地味に他種のエビを攻撃します。そのため、力が弱い種類のエビから徐々に数が減っていきます。</p>
<p>そして、アルジーライムシュリンプはミナミヌマエビやチェリーシュリンプと交雑してしまいます。コケ取り能力も落ちてしまうので混泳は避けたほうが良いです。</p>
<p>水槽内のヌマエビは一種に統一しましょう。</p>
<h3>プレコ</h3>
<p>プレコはほとんどアオミドロを食べません。ただ、プレコがいなくなった水槽で数カ月後に突然アオミドロが繁殖し始めたことを何回か経験したことがあります。そのため、プレコはアオミドロ対策では重要な生体だと思います。</p>
<p>推測では先で説明した"アオミドロは定着できないと弱い問題"と関連が深いのではないかと推測しています。</p>
<p>プレコは流木や水草、ガラス面などを積極的に舐め回します。そうすると、浮遊しているアオミドロはなかなか定着することができません。そうなると、アオミドロは大きく成長することができなくなります。</p>
<h3>サイアミーズフライングフォックス</h3>
<p>サイアミーズフライングフォックスは気まぐれに細長い植物性の物に噛みつく癖があるようです。そのため、アオミドロもそれなりの量を食べる時があります。</p>
<p>サイアミーズフライングフォックスは泳ぎが微妙に下手くそなので泳ぎやすいスペースに食べやすい感じに生えているアオミドロじゃないと食べません。</p>
<p>餌をやりすぎるとコケを食べなくなったりするので餌はあまりあげないほうが良いです。</p>
<p>それなりに大きくなるのと、気性が荒い面があるトラブルメーカーでもあるので導入は慎重に検討したほうが良いです。</p>
<h3>人手でアオミドロを取る</h3>
<p>やはりアオミドロ自体を喜んで食べる生体はいないようです。今まで挙げた生体もアオミドロを減らすというよりも抑えたり、発生を予防したりする面が強いです。</p>
<p>そのため、アオミドロ対策の生体がアオミドロを食べる傍ら、水槽が安定するまではそれなりの頻度人手でアオミドロを取ることが重要になります。</p>
<h2>まとめ</h2>
<p>アオミドロ対策には下記の３つがおすすめです。</p>
<ul>
<li>外部式フィルターをガンガン回す</li>
<li>ヤマトヌマエビ or アルジーライムシュリンプを投入する</li>
<li>プレコを投入する</li>
</ul>
<p>上記を行ったうえで人手で取るのが重要です。</p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>timmのconvnextv2のトレーニング済みモデルを使って画像分析をしてみる</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/image-recognition-using-timm-convnextv2/"/>
        <id>https://corkborg.github.io/image-recognition-using-timm-convnextv2/</id>
        <media:content url="https://corkborg.github.io/media/posts/29/fish_kingyo2.png" medium="image" />
            <category term="画像認識"/>

        <updated>2024-03-24T16:09:18+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/29/fish_kingyo2.png" alt="" />
                    timmとはPyTorch向けのライブラリで、画像認識系の深層学習の実装を用意してくれている感じのライブラリになっています。 対応している手法を見てみると2024年現在ではvit, resnet, swin, convnextなどをサポートしているようです。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/29/fish_kingyo2.png" class="type:primaryImage" alt="" /></p>
                <p><a href="https://timm.fast.ai/" target="_blank" rel="noopener noreferrer">timm</a>とはPyTorch向けのライブラリで、画像認識系の深層学習の実装を用意してくれている感じのライブラリになっています。</p>
<p>対応している手法を見てみると2024年現在ではvit, resnet, swin, convnextなどをサポートしているようです。</p>
<p>主にtimmは新たにモデルをトレーニングして作成する際に使うと思うのですが、すでにトレーニング済みのモデルが用意されていて試しにそれを使うこともできます。</p>
<p>個人的にtimmの学習済みモデルをfine-tuning（微調整）して見たいと思ったので、とりあえずモデルを動かしてみることにしました。</p>
<h2>ConvNeXt V2</h2>
<p>今回使っているConvNeXT V2という手法は、昔から存在するCNNという画像認識手法を活用した2022年に提案された新しい手法です。画像認識の分野では新しいTransformer系よりも精度が良いようです（2022年くらいでは）。</p>
<p>ConvNeXtはCNN系なので精度比でモデルサイズが小さくて済むようです。そのためメモリにも優しいと思われます。</p>
<p>手法の技術的な詳細はこれらのサイトに書いてありますが筆者はあまり理解していません。<br><a href="https://arxiv.org/abs/2301.00808">https://arxiv.org/abs/2301.00808</a><br><a href="https://arxiv.org/abs/2201.03545" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2201.03545</a></p>
<h2>画像認識をしてみる</h2>
<p>まずPythonに必要なものをインストールします。</p>
<pre class="language-bash"><code>pip install torch timm pillow torchvision</code></pre>
<p>学習済みモデルはImageNet-1kというデータセットを使っているようなので、ラベルの情報が必要です。こちらにImageNet-1kのラベルをまとめてくれている人がいるのでダウンロードしてlabels.pyという名前に変更します。<br><a href="https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a" target="_blank" rel="noopener noreferrer">https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a</a></p>
<p>適当なPythonソースコードを作成します。</p>
<pre class="language-python"><code>import sys
from itertools import zip_longest

import timm
import torch
from PIL import Image
from timm.data import resolve_data_config
from timm.data.transforms_factory import create_transform


# 下記からダウンロードしたラベルをlabels.pyとして保存して使用する
# https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a
from labels import labels

model = timm.create_model('convnextv2_tiny.fcmae', pretrained=True)
# model = timm.create_model("convnextv2_huge.fcmae_ft_in22k_in1k_512", pretrained=True)
model.eval()

# モデル向けに画像を変換してくれる関数を作成
transform = create_transform(**resolve_data_config(model.pretrained_cfg, model=model), is_training=False)

# 変換する
image = Image.open(sys.argv[1]).convert('RGB')
image = transform(image).unsqueeze(0)

# 推論
out = model(image)

# 予想された確率の合計が１になるように変換
probabilities = out.softmax(dim=1)

# 上位５つの推論結果を取得
top5_probabilities, top5_class_indices = torch.topk(probabilities * 100, k=5)

for c, v in zip_longest(top5_class_indices[0], top5_probabilities[0]):
    label_id = c.item()  # ラベルのid
    label_name = labels[label_id]  # ラベルの英名
    label_probability = v.item()  # 確率
    print(label_id, label_name, label_probability)</code></pre>
<p>適当な画像で推論してみます。</p>
<pre class="language-bash"><code>python predict.py image.jpg</code></pre>
<p>ImageNet-1kは小さいデータセットなので動物などわかりやすい画像で試してみるのが良さそうです。</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/29/sukurinsiyotuto-2024-03-24-16.40.09.png" alt="ImageNet-1K dataset records" width="523" height="300" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-xs.png 300w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-sm.png 480w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-md.png 749w ,https://corkborg.github.io/media/posts/29/responsive/sukurinsiyotuto-2024-03-24-16.40.09-xl.png 1200w"></figure>
<p>ただ、めちゃめちゃな結果が返ってくると思います。試しに使用した。</p>
<div>
<div>convnextv2_tiny.fcmaeという学習済みモデルが非力だからです。</div>
<div> </div>
<div>コメントを解除して大きめで精度の良いモデルを有効化します（2GBくらいあります）。</div>
<div>
<pre class="language-bash"><code># model = timm.create_model('convnextv2_tiny.fcmae', pretrained=True)
model = timm.create_model("convnextv2_huge.fcmae_ft_in22k_in1k_512", pretrained=True)</code></pre>
</div>
</div>
<p>金魚の画像を投入してみた結果です。</p>
<pre class="language-bash"><code>1 goldfish, Carassius auratus 85.73846435546875
392 rock beauty, Holocanthus tricolor 8.172449111938477
393 anemone fish 0.17695628106594086
973 coral reef 0.15994583070278168</code></pre>
<p>うまく推論できていそうです。（金魚は学名だとCarassius auratusと言うのか…）</p>
<h2>timmの詳細</h2>
<p>timmの使い方はここに書いてあります。<br><a href="https://huggingface.co/docs/hub/timm" target="_blank" rel="noopener noreferrer">https://huggingface.co/docs/hub/timm</a></p>
<p>timmの推論済みConvNeXTモデルの詳細は下記に書いてあります。<br><a href="https://huggingface.co/timm/convnextv2_tiny.fcmae" target="_blank" rel="noopener noreferrer">https://huggingface.co/timm/convnextv2_tiny.fcmae</a></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>バイクパークでバイク駐車場の契約を完全リモートで行った話</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/sign-contract-bikepark-81989-remotely/"/>
        <id>https://corkborg.github.io/sign-contract-bikepark-81989-remotely/</id>
        <media:content url="https://corkborg.github.io/media/posts/23/P3200130.JPG" medium="image" />
            <category term="バイク"/>

        <updated>2024-02-28T23:22:00+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/23/P3200130.JPG" alt="ここは今回契約した駐車場ではない" />
                    だいぶ前にバイクパーク（https://81989.jp/）という全国でバイク駐輪場を運営している不動産会社さんで契約しました。 ここの駐輪場はネットで問い合わせをすることができ、不動産会社に訪れなくても電話と郵便で契約することができたのでその体験記を書きます。 都内に引っ越した際にバイク駐輪場を探していたのですが、競争が激しくなかなか良い駐車場が見つかりませんでした。 そんななかバイクパークというサイトでは他の不動産紹介サイトに載っていない駐車場を取り扱っていること、Google Mapで見る感じ最近までバイク駐輪場がなかった場所に駐輪場を新しく作っている事に気づきました。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/23/P3200130.JPG" class="type:primaryImage" alt="ここは今回契約した駐車場ではない" /></p>
                <p>だいぶ前にバイクパーク（<a href="https://81989.jp/" target="_blank" rel="noopener noreferrer">https://81989.jp/</a>）という全国でバイク駐輪場を運営している不動産会社さんで契約しました。<br>ここの駐輪場はネットで問い合わせをすることができ、不動産会社に訪れなくても電話と郵便で契約することができたのでその体験記を書きます。</p>
<h2>空きの駐輪場が見つからない</h2>
<p>都内に引っ越した際にバイク駐輪場を探していたのですが、競争が激しくなかなか良い駐車場が見つかりませんでした。</p>
<p>そんななかバイクパークというサイトでは他の不動産紹介サイトに載っていない駐車場を取り扱っていること、Google Mapで見る感じ最近までバイク駐輪場がなかった場所に駐輪場を新しく作っている事に気づきました。</p>
<p>このサイトは比較的競争が激しくないかもしれないと思い駐車場の空き状況を問い合わせを行った所、読みが当たったのか結構空きがあり契約を進める事にしました。</p>
<h2>契約の流れ</h2>
<p>サイトで駐車場を選ぶ → 空き状況問い合わせ → メールで空き状況返送 → <br>電話で駐車場申し込み → 初期費用振込 → <br>バイクパークから契約書類郵送 → 契約書を記入して送付 → <strong>契約完了</strong></p>
<h3>サイトで駐車場を選ぶ<a href="https://81989.jp/"></a></h3>
<p>まず<a href="https://81989.jp/">バイクパークのサイト</a><a target="_blank" rel="noopener noreferrer"></a>で駐車場を選びます。いくつか良さそうな駐車場を選んだら管理番号をメモしておきます。</p>
<p>その後サイト内の問い合わせフォームに必要事項を記入して空き状況の問い合わせを行います。</p>
<p>問い合わせ時に記入したメールアドレスに空き状況が記載されたメールが届きます。<br>メール内に申し込みを行う場合は電話でと書いてあるので問題なければ電話を行います。</p>
<h3>電話で駐車場申し込み</h3>
<p>電話で駐車場を申し込むさいにはいくつか契約に必要な事項を聞かれます。</p>
<ul>
<li>契約する駐車場の管理番号</li>
<li>希望の駐車スペース番号</li>
<li>バイクの車種</li>
<li>契約予定日</li>
<li>引き落としに使用する銀行口座の会社</li>
<li>緊急連絡先（２つ）</li>
</ul>
<p><strong>緊急連絡先が２つ必要になります</strong>。<br>片方は会社でも良いらしいので、私は親族と勤務している会社の２つを緊急連絡先に設定しました。<br>電話に出ない等がなければ基本緊急連絡先に連絡することはないという話でした。</p>
<h3>初期費用振込</h3>
<p>申し込みを行うと初期費用の振込のためのメールが送られてきます。</p>
<p>メールに添付されたPDFの内容をもとに銀行振り込みを行います。<br>私は銀行のスマホ振込アプリから振込を行いました。</p>
<h3>契約書</h3>
<p>審査に問題がなければ、バイクパークから契約書類が一式送られてきます。</p>
<p>主には下記のようなものです。</p>
<ul>
<li>契約書</li>
<li>賃貸借契約書</li>
<li>振込用紙</li>
<li>返送用のゆうパックが送られてきます。</li>
</ul>
<p>各書類の記入方法はわかりやすい説明書類が入っているのでそれに沿って記載を行います。</p>
<p>賃貸借契約書に使うための印鑑と、振込用に銀行印が必要になると思います。</p>
<p>それぞれ記入したらゆうパックで返送します。</p>
<p>契約完了です。</p>
<h2>最後に</h2>
<p>家にいながら素早く契約完了できて良かったです。</p>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>2024年にPS VitaでPlayStation Storeのゲームを購入できるのか？</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/tried-purchasing-playstationstore-game-for-psvita-in-2024/"/>
        <id>https://corkborg.github.io/tried-purchasing-playstationstore-game-for-psvita-in-2024/</id>
        <media:content url="https://corkborg.github.io/media/posts/27/DSC_1245.JPG" medium="image" />
            <category term="ゲーム"/>

        <updated>2024-02-17T18:42:55+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/27/DSC_1245.JPG" alt="2024年 PS Vita パタポン２のスタート画面" />
                    年末に押入れ掃除をしていたらPS Vitaを見つけました。 このVitaは初期型で発売初月（2011年12月）くらいに購入したのでかれこれ13年位経っています。 せっかく掘り出したのでゲームを遊ぼうと思ったのですが、インストール済みのゲームの中にプレイしたい物がありませんでした。 PlayStation&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/27/DSC_1245.JPG" class="type:primaryImage" alt="2024年 PS Vita パタポン２のスタート画面" /></p>
                <p>年末に押入れ掃除をしていたらPS Vitaを見つけました。<br>このVitaは初期型で発売初月（2011年12月）くらいに購入したのでかれこれ13年位経っています。</p>
<p>せっかく掘り出したのでゲームを遊ぼうと思ったのですが、インストール済みのゲームの中にプレイしたい物がありませんでした。</p>
<p>PlayStation Storeでゲームを購入しようと思ったのですが、PlayStation Vitaは2021年にサポート終了しています。</p>
<p>一応Vitaのストアアプリは起動するけどこれは購入できるのか？恐る恐る試してみたレポートです。</p>
<p>（結論から言うと購入できました。）</p>
<h2>Vitaから直接お金をストアに入金できなくなった</h2>
<p>昔はクレジットカードなどを活用して直接Vitaでダウンロードゲームを購入できたはずですが、現在はVitaからPlayStation Storeに直接入金することができません。<br>ただ、入金が不可能というわけではないです。</p>
<p>WebのPlayStation Storeからウォレットに入金してVitaから使用することができます。</p>
<p>ウォレットの入金方法はクレジットカード、プレイステーション ストアチケット（コンビニなどに売ってる）など色々手段がありますが、今回はクレジットカードで購入しようと思います。</p>
<h3>2024年現在クレジットカードでPlayStation VitaでPlayStation Storeのゲームを購入するには…</h3>
<p>PCでWebの<a href="https://store.playstation.com/" target="_blank" rel="noopener noreferrer">PlayStation Store</a>にアクセスしてでウォレットに入金</p>
<p>↓</p>
<p>PlayStation VitaでStoreにアクセス</p>
<p>↓</p>
<p>該当のゲームをウォレットから支払って購入</p>
<p>という流れになります。</p>
<h2>購入してみた</h2>
<h3>Webでの操作</h3>
<p><a href="https://store.playstation.com/" target="_blank" rel="noopener noreferrer">PlayStation Store</a>にアクセス。<br>ログインして右上のプロフィールのところをクリックして支払い管理に移動します。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/sukurinsiyotuto-2024-02-23-19.32.53.png" alt="" width="261" height="250" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.32.53-xs.png 300w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.32.53-sm.png 480w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.32.53-md.png 749w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.32.53-xl.png 1200w"></figure>
<p>支払い設定のページで支払い方法を設定します（クレジットカードなど）。<br>支払い方法を登録できたら下部の”チャージ（入金）する”を押して先ほど登録した支払い方法を選択します。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/sukurinsiyotuto-2024-02-23-19.33.20.png" alt="" width="250" height="260" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.20-xs.png 300w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.20-sm.png 480w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.20-md.png 749w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.20-xl.png 1200w"></figure>
<p>ウォレットチャージ画面で入金する金額を選びます。<br>決められた単位でしか入金できません（複数ゲームを購入する予定はなかったので困る…）。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/sukurinsiyotuto-2024-02-23-19.33.36.png" alt="" width="313" height="553" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.36-xs.png 300w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.36-sm.png 480w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.36-md.png 749w ,https://corkborg.github.io/media/posts/27/responsive/sukurinsiyotuto-2024-02-23-19.33.36-xl.png 1200w"></figure>
<p>チャージ（入金）してウォレットに入金完了です。</p>
<h3>Vitaでの操作</h3>
<p>VitaでPlayStation Storeアプリを起動します。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/2024-02-23-200325.jpg" alt="Vita PlayStation Storeアプリ　初期画面" width="960" height="544" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200325-xs.jpg 300w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200325-sm.jpg 480w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200325-md.jpg 749w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200325-xl.jpg 1200w"></figure>
<p>適当にゲームを選びます。PSPのゲームになりますがパタポンを選びました。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/2024-02-23-200410.jpg" alt="" width="960" height="544" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200410-xs.jpg 300w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200410-sm.jpg 480w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200410-md.jpg 749w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200410-xl.jpg 1200w"></figure>
<p>ウォレットから購入します。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/27/2024-02-23-200416.jpg" alt="パタポン PlayStation Store購入画面" width="960" height="544" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200416-xs.jpg 300w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200416-sm.jpg 480w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200416-md.jpg 749w ,https://corkborg.github.io/media/posts/27/responsive/2024-02-23-200416-xl.jpg 1200w"></figure>
<p>2024年でもPS Vitaでダウンロードゲームを購入することができました👍</p>
<h2>余談</h2>
<p>メンテナンスされてないためかVita向けの体験版ソフトをStoreからダウンロードしようとしても失敗してしまう物がありました。</p>
<p>もしかしたら購入したゲームの中にはうまくダウンロードできないものなどが存在するかもしれないです。そのようなものにあたってしまったらSonyに問い合わせしましょう。</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>EdgeRouter X SFPのACアダプターを24Vの物に交換した</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/replacement-ac-adapter-for-edgerouter-x-sfp/"/>
        <id>https://corkborg.github.io/replacement-ac-adapter-for-edgerouter-x-sfp/</id>
        <media:content url="https://corkborg.github.io/media/posts/24/sukurinsiyotuto-2024-02-04-20.20.00.png" medium="image" />
            <category term="ネットワーク"/>

        <updated>2024-02-04T20:13:35+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/24/sukurinsiyotuto-2024-02-04-20.20.00.png" alt="EdgeRouter X SFP" />
                    EdgeRouter X SFPを何年か使用しているのですが最近調子が悪いです。 LANケーブルを多数つなげると再起動してしまい。２本しかケーブルをつなげることができません。 ACアダプターが弱っていることが原因だと思うので交換することにしました。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/24/sukurinsiyotuto-2024-02-04-20.20.00.png" class="type:primaryImage" alt="EdgeRouter X SFP" /></p>
                <p>EdgeRouter X SFPを何年か使用しているのですが最近調子が悪いです。<br>LANケーブルを多数つなげると再起動してしまい。２本しかケーブルをつなげることができません。<br>ACアダプターが弱っていることが原因だと思うので交換することにしました。</p>
<h2>EdgeRouter X SFPに元々ついてたACアダプタは電圧が低かった</h2>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/24/PXL_20240204_102932486.MP.jpg" alt="EdgeRouter X SFPに付属していたACアダプタ 12V 1A" width="137" height="243" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_102932486.MP-xs.jpg 300w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_102932486.MP-sm.jpg 480w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_102932486.MP-md.jpg 749w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_102932486.MP-xl.jpg 1200w"></figure>
<p>EdgeRouterに標準で付属しているACアダプタは日本では使えないので、輸入業者経由でEdgeRouterを買った場合適当に日本向けのACアダプタをつけてくれます。</p>
<p>自分の物には秋月電商のACアダプタが付いてきてました。</p>
<ul>
<li>12V 1A MAX: 12W</li>
</ul>
<p>EdgeRouter X SFP本体は5Wまでしか使用しないのでこれでも動作しますが、24V 2.5AのACアダプタが本来の標準のACアダプタの性能です。<br>（Passive PoEのために24Vを使用するらしい）</p>
<p>今回、ACアダプタの交換ついでに24Vのものに変更することにしました。</p>
<h2>EdgeRouter X SFPのACアダプタの詳細要件</h2>
<p>誤ったACアダプタを装着すると最悪の場合壊れてしまうので調査しました。</p>
<ul>
<li>24V 2.5A（ただ、機械自体は9Vから26Vまで許容可能です）</li>
<li>ソケットはDCジャックで内径が2.1mm 外径が5mm</li>
<li><strong style="font-family: var(--editor-font-family); font-size: inherit;">DCジャックの極性は内側が+、外側が−のセンタープラス</strong></li>
</ul>
<h4>極性に注意</h4>
<p>極性を間違えると壊れる可能性が高いので注意しましょう。ACアダプタでは独特の記号で説明されていることが多いです。</p>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/24/sukurinsiyotuto-2024-02-04-20.37.40.png" alt="" width="198" height="48" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/24/responsive/sukurinsiyotuto-2024-02-04-20.37.40-xs.png 300w ,https://corkborg.github.io/media/posts/24/responsive/sukurinsiyotuto-2024-02-04-20.37.40-sm.png 480w ,https://corkborg.github.io/media/posts/24/responsive/sukurinsiyotuto-2024-02-04-20.37.40-md.png 749w ,https://corkborg.github.io/media/posts/24/responsive/sukurinsiyotuto-2024-02-04-20.37.40-xl.png 1200w"></figure>
<p>正確な読み方については調べてみてください。<br><a href="https://www.monotaro.com/note/readingseries/testerkiso/0403/" target="_blank" rel="noopener noreferrer">外部サイト: ACアダプターのチェック - モノタロウ</a></p>
<h4>参考</h4>
<p>EdgeRouterのDCアダプタの口径はUbiquitiのコミュニティの情報を参照しました。(<a href="https://community.ui.com/questions/EdgeRouter-Lite-Power-Supply-replacement/9a1862ca-f4a0-48c9-a959-517c06250875" target="_blank" rel="noopener noreferrer">EdgeRouter Lite Power Supply replacement</a>)</p>
<h3>通販で該当するACアダプタを探す</h3>
<p>24V 2.5Aでソケットの口径と極性が一致するものを探しましょう。</p>
<p>海渡電子さんが輸入しているMerryKing社のACアダプタを購入しました。<br><a href="https://www.amazon.co.jp/gp/product/B0BSLBCY3B" target="_blank" rel="noopener noreferrer">Kaito Denshi(海渡電子) ACアダプター 24V 2.5A 60W スイッチング 電源 DC 直流 PSE RoHS</a></p>
<h2>動かしてみる</h2>
<figure class="post__image"><img loading="lazy"  src="https://corkborg.github.io/media/posts/24/PXL_20240204_105832124.jpg" alt="EdgeRouter X SFPに24V 2.5AのACアダプタを接続" width="265" height="471" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_105832124-xs.jpg 300w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_105832124-sm.jpg 480w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_105832124-md.jpg 749w ,https://corkborg.github.io/media/posts/24/responsive/PXL_20240204_105832124-xl.jpg 1200w"></figure>
<p>しっかり動きました。LANケーブルを多数繋げても落ちたりすることがなくなりました。</p>
<p>EdgeRouterはACアダプタが弱ってくると不安定になるのでそのような場合は交換しましょう。</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>VDSLよりも早いauひかりタイプG（G.fast）の計測をしてみた</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/au-hikari-gfast-type-review/"/>
        <id>https://corkborg.github.io/au-hikari-gfast-type-review/</id>
        <media:content url="https://corkborg.github.io/media/posts/22/DSC_0981_01.JPG" medium="image" />
            <category term="レビュー"/>
            <category term="ネットワーク"/>

        <updated>2024-01-26T02:03:01+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/22/DSC_0981_01.JPG" alt="auひかりマンション  タイプG（G.fast）" />
                    集合住宅の光回線では、建物まで光ファイバーを引き込み、その回線を分配して各部屋に配線する必要があります。 回線を分配する際に一番理想的な方式は光配線方式ですが、建物によっては電話線で各部屋に分配します。 電話線で部屋に回線分配する方法には昔からのVDSL方式と新しめのG.fast方式があります。 VDSL方式はNTTで一般的で回線速度が100Mbpsを下回る場合が多く、あまり早いとは言えません。 G.fast方式は1Gbpsを目指して作られた規格です。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/22/DSC_0981_01.JPG" class="type:primaryImage" alt="auひかりマンション  タイプG（G.fast）" /></p>
                <p>集合住宅の光回線では、建物まで光ファイバーを引き込み、その回線を分配して各部屋に配線する必要があります。</p>
<p>回線を分配する際に一番理想的な方式は光配線方式ですが、建物によっては電話線で各部屋に分配します。</p>
<p>電話線で部屋に回線分配する方法には昔からのVDSL方式と新しめのG.fast方式があります。<br>VDSL方式はNTTで一般的で回線速度が100Mbpsを下回る場合が多く、あまり早いとは言えません。</p>
<p>G.fast方式は1Gbpsを目指して作られた規格です。<br>auひかりでは、マンション タイプGで採用していて上り下りの合計が最大830Mbpsになるように設計しているようです。</p>
<figure class="post__image" ><figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/22/in_mansion_img_optical_fiber_05-2.webp" alt="auひかりマンション  タイプG（G.fast）" width="310" height="392" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/22/responsive/in_mansion_img_optical_fiber_05-2-xs.webp 300w ,https://corkborg.github.io/media/posts/22/responsive/in_mansion_img_optical_fiber_05-2-sm.webp 480w ,https://corkborg.github.io/media/posts/22/responsive/in_mansion_img_optical_fiber_05-2-md.webp 749w ,https://corkborg.github.io/media/posts/22/responsive/in_mansion_img_optical_fiber_05-2-xl.webp 1200w"></figure>
<figcaption >auひかり公式より</figcaption>
</figure>
<p><br>今回、G.fast方式の回線を契約してみたので実際の使用感等を確認してみました。</p>
<p><a href="https://www.au.com/internet/mansion/typeG/" title="マンション タイプG：auひかり マンション | au" target="_blank" rel="noopener noreferrer"></a><a href="https://www.au.com/internet/mansion/typeG/" target="_blank" rel="noopener noreferrer">マンション タイプG：auひかり マンション | au</a></p>
<h2>回線速度</h2>
<p>実際に回線の速度計測を行いました。</p>
<p>auひかり タイプGでプロバイダはSo-net。<br>東京都のマンションの７階です。</p>
<p>回線速度の計測ではおなじみの<a href="https://fast.com/" target="_blank" rel="noopener noreferrer">fast.com</a>のコマンドライン版を使用しました。</p>
<pre class="language-bash"><code>$ fast --upload
    380 Mbps ↓ / 92 Mbps ↑

$ fast --upload
    380 Mbps ↓ / 96 Mbps ↑</code></pre>
<p><strong>ダウンロード速度が380Mbps</strong><br><strong>アップロード速度が90Mbps</strong><br>だいたいこれくらいの速度になりました。</p>
<p>ダウンロード速度はVDSLに比べると大分良い速度が出ています。<br>ただ、アップロード速度は同等程度ですね。</p>
<p>カタログスペックに比べると数百Mbps落ちるダウンロード速度ですがG.fastは電話線の長さに応じて伝送速度が落ちます。そのため、マンションのMDF室（分配する所）から部屋までの距離が関係しているのか思います。</p>
<h2>回線の安定感</h2>
<p>いくら瞬間的な回線速度が早くても、通信品質の悪い回線では通信内容が通信中に失われて使用感が最悪になってしまう場合があります（パケットロスと言います）。</p>
<p>パケットロスが発生したかどうかこの回線で使用していた各PCで確認してみたのですが特に問題なさそうです。</p>
<p>回線の問題に繊細なビデオ通話等も行ったのですが通信上の問題が発生することはなかったです。</p>
<p>この結果からG.fast自体が不安定な規格ではないことがわかります。</p>
<p>もしも、G.fastで通信品質に問題を抱えている人は電話線の状態が良くない可能性がありそうです。</p>
<h2>まとめ</h2>
<p>VDSLに比べてG.fast方式はだいぶ良いですね。電話線しか引き込めない物件であれば大分おすすめです。</p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">ただ、G.fast方式も光配線方式に比べると遅いので引き込めるのであれば光ファイバーを引き込む工事をしてもらったほうが良さそうです。</span></p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">私も折をみて戸建て契約で光ファイバーに切り替えようかと思っています。</span></p>
<p>ちなみに、一般家庭向けにG.fast方式を日本で提供している事業者は今のところauひかりだけだと思います。</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>EN-EL15,EN-EL15a,EN-EL15b,EN-EL15cの違い早見表</title>
        <author>
            <name>ミズソバ</name>
        </author>
        <link href="https://corkborg.github.io/difference-en-el15/"/>
        <id>https://corkborg.github.io/difference-en-el15/</id>
        <media:content url="https://corkborg.github.io/media/posts/20/DSC_0930.JPG" medium="image" />
            <category term="カメラ"/>

        <updated>2023-12-10T19:16:18+09:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://corkborg.github.io/media/posts/20/DSC_0930.JPG" alt="EN-EL15b" />
                    NikonのD810やZ 6など一眼レフ、一眼ミラーレスなどで使用されるバッテリーEN-EL15シリーズ。 このバッテリーは現在４種類存在して違いが分かりづらいので購入する人目線で早見表を作りました。 旅行の時はなるべく持ち物を少なくしたいと思います。 EN-EL15bとEN-EL15cはカメラ本体に給電することでバッテリーを充電することができるので持ち物を少なくすることができて便利です。&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://corkborg.github.io/media/posts/20/DSC_0930.JPG" class="type:primaryImage" alt="EN-EL15b" /></p>
                <p>NikonのD810やZ 6など一眼レフ、一眼ミラーレスなどで使用されるバッテリーEN-EL15シリーズ。<br>このバッテリーは現在４種類存在して違いが分かりづらいので購入する人目線で早見表を作りました。</p>
<table style="border-collapse: collapse; width: 100%; border-color: #000000; border-style: solid;" border="1">
<tbody>
<tr>
<td style="width: 20.7773%;">バッテリー名</td>
<td style="width: 23.0194%;">カメラ本体内充電</td>
<td style="width: 18.3857%;">バッテリー容量</td>
<td style="width: 37.9671%;">備考</td>
</tr>
<tr>
<td style="width: 20.7773%;"><strong>EN-EL15</strong></td>
<td style="width: 23.0194%;">未対応</td>
<td style="width: 18.3857%;">1900mAh</td>
<td style="width: 37.9671%;">旧製品なので購入しないほうが良い.<br>Z 8では使用することができない.</td>
</tr>
<tr>
<td style="width: 20.7773%;"><strong>EN-EL15a</strong></td>
<td style="width: 23.0194%;">未対応</td>
<td style="width: 18.3857%;">1900mAh</td>
<td style="width: 37.9671%;">旧製品なので購入しないほうが良い.<br>Z 8では使用することができない.<br>EN-EL15の改良型で、一部一眼レフで電池の減りが抑えられている.</td>
</tr>
<tr>
<td style="width: 20.7773%;"><strong>EN-EL15b</strong></td>
<td style="width: 23.0194%;">対応</td>
<td style="width: 18.3857%;">1900mAh</td>
<td style="width: 37.9671%;">現行品.</td>
</tr>
<tr>
<td style="width: 20.7773%;"><strong>EN-EL15c</strong></td>
<td style="width: 23.0194%;">対応</td>
<td style="width: 18.3857%;">2280mAh</td>
<td style="width: 37.9671%;">現行品.<br>バッテリー容量が増加していて長時間使用できる.<br>一番おすすめ.</td>
</tr>
</tbody>
</table>
<h2>旅行の時、本体内充電が便利</h2>
<p>旅行の時はなるべく持ち物を少なくしたいと思います。<br>EN-EL15bとEN-EL15cはカメラ本体に給電することでバッテリーを充電することができるので持ち物を少なくすることができて便利です。</p>
<p>特にZシリーズはUSB-Cで充電することができるので、携帯電話やPCの充電器があれば大丈夫です（45W PD以上の能力がある充電器が望ましい）。</p>
<h2>ミラーレスカメラは電池の消費が激しい</h2>
<p>一眼レフに比べると一眼ミラーレスは電池の消費が激しいです。</p>
<p>私は、Nikon Z 6を使用しているのですが、一日中撮影しているとバッテリー一つでは全然持ちません。</p>
<p>そのため、一眼ミラーレスでバッテリー購入を検討している方はなるべく容量の大きいEN-EL15cを購入することをおすすめします。</p>
<h2>参考</h2>
<p>Nikon公式サイトにはそれぞれのバッテリー容量が書かれていないので、実際のバッテリーに記載されているスペックの写真を掲載します。<br>バッテリー容量がわかると思います。</p>
<p>※EN-EL15aだけ持っていないので掲載していません</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://corkborg.github.io/media/posts/20/PXL_20240127_051629149.MP.jpg" alt="EN-EL15, EN-EL15b, EN-EL15cのバッテリー容量などの詳細スペック" width="326" height="579" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://corkborg.github.io/media/posts/20/responsive/PXL_20240127_051629149.MP-xs.jpg 300w ,https://corkborg.github.io/media/posts/20/responsive/PXL_20240127_051629149.MP-sm.jpg 480w ,https://corkborg.github.io/media/posts/20/responsive/PXL_20240127_051629149.MP-md.jpg 749w ,https://corkborg.github.io/media/posts/20/responsive/PXL_20240127_051629149.MP-xl.jpg 1200w"></figure>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
